//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 3 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var infoPlist: infoPlist { .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale)) }
    var launchScreen: launchScreen { .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func infoPlist(preferredLanguages: [String]) -> infoPlist {
      .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale))
    }
    func launchScreen(preferredLanguages: [String]) -> launchScreen {
      .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.infoPlist` struct is generated, and contains static references to 1 localization keys.
    struct infoPlist {
      let source: RswiftResources.StringResource.Source

      /// en translation: CloudMusic
      ///
      /// Key: CFBundleName
      ///
      /// Locales: zh-Hans, en
      var cfBundleName: RswiftResources.StringResource { .init(key: "CFBundleName", tableName: "InfoPlist", source: source, developmentValue: "CloudMusic", comment: nil) }
    }

    /// This `_R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      let source: RswiftResources.StringResource.Source
    }

    /// This `_R.string.localizable` struct is generated, and contains static references to 348 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: About
      ///
      /// Key: About
      ///
      /// Locales: en, zh-Hans
      var about: RswiftResources.StringResource { .init(key: "About", tableName: "Localizable", source: source, developmentValue: "About", comment: nil) }

      /// en translation: Activity Details
      ///
      /// Key: ActivityDetails
      ///
      /// Locales: en, zh-Hans
      var activityDetails: RswiftResources.StringResource { .init(key: "ActivityDetails", tableName: "Localizable", source: source, developmentValue: "Activity Details", comment: nil) }

      /// en translation: Order Details
      ///
      /// Key: ActivityOrderDetail
      ///
      /// Locales: en, zh-Hans
      var activityOrderDetail: RswiftResources.StringResource { .init(key: "ActivityOrderDetail", tableName: "Localizable", source: source, developmentValue: "Order Details", comment: nil) }

      /// en translation: Click to jump to the details page to see more
      ///
      /// Key: AdClickTip
      ///
      /// Locales: en, zh-Hans
      var adClickTip: RswiftResources.StringResource { .init(key: "AdClickTip", tableName: "Localizable", source: source, developmentValue: "Click to jump to the details page to see more", comment: nil) }

      /// en translation: Add
      ///
      /// Key: Add
      ///
      /// Locales: en, zh-Hans
      var add: RswiftResources.StringResource { .init(key: "Add", tableName: "Localizable", source: source, developmentValue: "Add", comment: nil) }

      /// en translation: Add to cart
      ///
      /// Key: AddCart
      ///
      /// Locales: en, zh-Hans
      var addCart: RswiftResources.StringResource { .init(key: "AddCart", tableName: "Localizable", source: source, developmentValue: "Add to cart", comment: nil) }

      /// en translation: Add to cart successfully
      ///
      /// Key: AddCartSuccess
      ///
      /// Locales: en, zh-Hans
      var addCartSuccess: RswiftResources.StringResource { .init(key: "AddCartSuccess", tableName: "Localizable", source: source, developmentValue: "Add to cart successfully", comment: nil) }

      /// en translation: Add success
      ///
      /// Key: AddSuccess
      ///
      /// Locales: en, zh-Hans
      var addSuccess: RswiftResources.StringResource { .init(key: "AddSuccess", tableName: "Localizable", source: source, developmentValue: "Add success", comment: nil) }

      /// en translation: Added successfully
      ///
      /// Key: AddedSuccessfully
      ///
      /// Locales: en, zh-Hans
      var addedSuccessfully: RswiftResources.StringResource { .init(key: "AddedSuccessfully", tableName: "Localizable", source: source, developmentValue: "Added successfully", comment: nil) }

      /// en translation: Agree
      ///
      /// Key: Agree
      ///
      /// Locales: en, zh-Hans
      var agree: RswiftResources.StringResource { .init(key: "Agree", tableName: "Localizable", source: source, developmentValue: "Agree", comment: nil) }

      /// en translation: Alipay
      ///
      /// Key: Alipay
      ///
      /// Locales: en, zh-Hans
      var alipay: RswiftResources.StringResource { .init(key: "Alipay", tableName: "Localizable", source: source, developmentValue: "Alipay", comment: nil) }

      /// en translation: Already downloaded
      ///
      /// Key: AlreadyDownloaded
      ///
      /// Locales: en, zh-Hans
      var alreadyDownloaded: RswiftResources.StringResource { .init(key: "AlreadyDownloaded", tableName: "Localizable", source: source, developmentValue: "Already downloaded", comment: nil) }

      /// en translation: Already downloading
      ///
      /// Key: AlreadyDownloading
      ///
      /// Locales: en, zh-Hans
      var alreadyDownloading: RswiftResources.StringResource { .init(key: "AlreadyDownloading", tableName: "Localizable", source: source, developmentValue: "Already downloading", comment: nil) }

      /// en translation: Already in the download list
      ///
      /// Key: AlreadyInDownloadList
      ///
      /// Locales: en, zh-Hans
      var alreadyInDownloadList: RswiftResources.StringResource { .init(key: "AlreadyInDownloadList", tableName: "Localizable", source: source, developmentValue: "Already in the download list", comment: nil) }

      /// en translation: Amount payable
      ///
      /// Key: AmountPay
      ///
      /// Locales: en, zh-Hans
      var amountPay: RswiftResources.StringResource { .init(key: "AmountPay", tableName: "Localizable", source: source, developmentValue: "Amount payable", comment: nil) }

      /// en translation: Area
      ///
      /// Key: Area
      ///
      /// Locales: en, zh-Hans
      var area: RswiftResources.StringResource { .init(key: "Area", tableName: "Localizable", source: source, developmentValue: "Area", comment: nil) }

      /// en translation: %d available
      ///
      /// Key: AvailableCount
      ///
      /// Locales: en, zh-Hans
      var availableCount: RswiftResources.StringResource1<Int> { .init(key: "AvailableCount", tableName: "Localizable", source: source, developmentValue: "%d available", comment: nil) }

      /// en translation: Avatar
      ///
      /// Key: Avatar
      ///
      /// Locales: en, zh-Hans
      var avatar: RswiftResources.StringResource { .init(key: "Avatar", tableName: "Localizable", source: source, developmentValue: "Avatar", comment: nil) }

      /// en translation: Batch Edit
      ///
      /// Key: BatchEdit
      ///
      /// Locales: en, zh-Hans
      var batchEdit: RswiftResources.StringResource { .init(key: "BatchEdit", tableName: "Localizable", source: source, developmentValue: "Batch Edit", comment: nil) }

      /// en translation: Bind
      ///
      /// Key: Bind
      ///
      /// Locales: en, zh-Hans
      var bind: RswiftResources.StringResource { .init(key: "Bind", tableName: "Localizable", source: source, developmentValue: "Bind", comment: nil) }

      /// en translation: Binding failed
      ///
      /// Key: BindError
      ///
      /// Locales: en, zh-Hans
      var bindError: RswiftResources.StringResource { .init(key: "BindError", tableName: "Localizable", source: source, developmentValue: "Binding failed", comment: nil) }

      /// en translation: Birthday
      ///
      /// Key: Birthday
      ///
      /// Locales: en, zh-Hans
      var birthday: RswiftResources.StringResource { .init(key: "Birthday", tableName: "Localizable", source: source, developmentValue: "Birthday", comment: nil) }

      /// en translation: Brand
      ///
      /// Key: Brand
      ///
      /// Locales: en, zh-Hans
      var brand: RswiftResources.StringResource { .init(key: "Brand", tableName: "Localizable", source: source, developmentValue: "Brand", comment: nil) }

      /// en translation: %1$d people bought
      ///
      /// Key: BuyCount
      ///
      /// Locales: en, zh-Hans
      var buyCount: RswiftResources.StringResource1<Int> { .init(key: "BuyCount", tableName: "Localizable", source: source, developmentValue: "%1$d people bought", comment: nil) }

      /// en translation: Buy Now
      ///
      /// Key: BuyNow
      ///
      /// Locales: en, zh-Hans
      var buyNow: RswiftResources.StringResource { .init(key: "BuyNow", tableName: "Localizable", source: source, developmentValue: "Buy Now", comment: nil) }

      /// en translation: Buy VIP
      ///
      /// Key: BuyVip
      ///
      /// Locales: en, zh-Hans
      var buyVip: RswiftResources.StringResource { .init(key: "BuyVip", tableName: "Localizable", source: source, developmentValue: "Buy VIP", comment: nil) }

      /// en translation: Cache listening
      ///
      /// Key: CacheWhileList
      ///
      /// Locales: en, zh-Hans
      var cacheWhileList: RswiftResources.StringResource { .init(key: "CacheWhileList", tableName: "Localizable", source: source, developmentValue: "Cache listening", comment: nil) }

      /// en translation: Call method 1
      ///
      /// Key: CallMethod1
      ///
      /// Locales: en, zh-Hans
      var callMethod1: RswiftResources.StringResource { .init(key: "CallMethod1", tableName: "Localizable", source: source, developmentValue: "Call method 1", comment: nil) }

      /// en translation: Call Method 2
      ///
      /// Key: CallMethod2
      ///
      /// Locales: en, zh-Hans
      var callMethod2: RswiftResources.StringResource { .init(key: "CallMethod2", tableName: "Localizable", source: source, developmentValue: "Call Method 2", comment: nil) }

      /// en translation: Cancel Collection(%1$d)
      ///
      /// Key: CancelCollect
      ///
      /// Locales: en, zh-Hans
      var cancelCollect: RswiftResources.StringResource1<Int> { .init(key: "CancelCollect", tableName: "Localizable", source: source, developmentValue: "Cancel Collection(%1$d)", comment: nil) }

      /// en translation: Cancel Edit
      ///
      /// Key: CancelEdit
      ///
      /// Locales: en, zh-Hans
      var cancelEdit: RswiftResources.StringResource { .init(key: "CancelEdit", tableName: "Localizable", source: source, developmentValue: "Cancel Edit", comment: nil) }

      /// en translation: Cancel Follow
      ///
      /// Key: CancelFollow
      ///
      /// Locales: en, zh-Hans
      var cancelFollow: RswiftResources.StringResource { .init(key: "CancelFollow", tableName: "Localizable", source: source, developmentValue: "Cancel Follow", comment: nil) }

      /// en translation: Cancel order
      ///
      /// Key: CancelOrder
      ///
      /// Locales: en, zh-Hans
      var cancelOrder: RswiftResources.StringResource { .init(key: "CancelOrder", tableName: "Localizable", source: source, developmentValue: "Cancel order", comment: nil) }

      /// en translation: Cancel Select All
      ///
      /// Key: CancelSelectAll
      ///
      /// Locales: en, zh-Hans
      var cancelSelectAll: RswiftResources.StringResource { .init(key: "CancelSelectAll", tableName: "Localizable", source: source, developmentValue: "Cancel Select All", comment: nil) }

      /// en translation: Cancel success
      ///
      /// Key: CancelSuccess
      ///
      /// Locales: en, zh-Hans
      var cancelSuccess: RswiftResources.StringResource { .init(key: "CancelSuccess", tableName: "Localizable", source: source, developmentValue: "Cancel success", comment: nil) }

      /// en translation: Cause of error: %@
      ///
      /// Key: CauseError
      ///
      /// Locales: en, zh-Hans
      var causeError: RswiftResources.StringResource1<String> { .init(key: "CauseError", tableName: "Localizable", source: source, developmentValue: "Cause of error: %@", comment: nil) }

      /// en translation: Modify address
      ///
      /// Key: ChangeAddress
      ///
      /// Locales: en, zh-Hans
      var changeAddress: RswiftResources.StringResource { .init(key: "ChangeAddress", tableName: "Localizable", source: source, developmentValue: "Modify address", comment: nil) }

      /// en translation: Change content
      ///
      /// Key: ChangeContent
      ///
      /// Locales: en, zh-Hans
      var changeContent: RswiftResources.StringResource { .init(key: "ChangeContent", tableName: "Localizable", source: source, developmentValue: "Change content", comment: nil) }

      /// en translation: Switch style
      ///
      /// Key: ChangeStyle
      ///
      /// Locales: en, zh-Hans
      var changeStyle: RswiftResources.StringResource { .init(key: "ChangeStyle", tableName: "Localizable", source: source, developmentValue: "Switch style", comment: nil) }

      /// en translation: Paused, click to resume download
      ///
      /// Key: ClickDownload
      ///
      /// Locales: en, zh-Hans
      var clickDownload: RswiftResources.StringResource { .init(key: "ClickDownload", tableName: "Localizable", source: source, developmentValue: "Paused, click to resume download", comment: nil) }

      /// en translation: Click to refresh
      ///
      /// Key: ClickRefresh
      ///
      /// Locales: en, zh-Hans
      var clickRefresh: RswiftResources.StringResource { .init(key: "ClickRefresh", tableName: "Localizable", source: source, developmentValue: "Click to refresh", comment: nil) }

      /// en translation: %@, click reload
      ///
      /// Key: ClickReload
      ///
      /// Locales: en, zh-Hans
      var clickReload: RswiftResources.StringResource1<String> { .init(key: "ClickReload", tableName: "Localizable", source: source, developmentValue: "%@, click reload", comment: nil) }

      /// en translation: Close application
      ///
      /// Key: CloseApp
      ///
      /// Locales: en, zh-Hans
      var closeApp: RswiftResources.StringResource { .init(key: "CloseApp", tableName: "Localizable", source: source, developmentValue: "Close application", comment: nil) }

      /// en translation: Collect Playlist(%1$d)
      ///
      /// Key: Collect
      ///
      /// Locales: en, zh-Hans
      var collect: RswiftResources.StringResource1<Int> { .init(key: "Collect", tableName: "Localizable", source: source, developmentValue: "Collect Playlist(%1$d)", comment: nil) }

      /// en translation: Collect coupon
      ///
      /// Key: CollectCoupon
      ///
      /// Locales: en, zh-Hans
      var collectCoupon: RswiftResources.StringResource { .init(key: "CollectCoupon", tableName: "Localizable", source: source, developmentValue: "Collect coupon", comment: nil) }

      /// en translation: Collected sheet
      ///
      /// Key: CollectedSheet
      ///
      /// Locales: en, zh-Hans
      var collectedSheet: RswiftResources.StringResource { .init(key: "CollectedSheet", tableName: "Localizable", source: source, developmentValue: "Collected sheet", comment: nil) }

      /// en translation: Collection success
      ///
      /// Key: CollectionSuccess
      ///
      /// Locales: en, zh-Hans
      var collectionSuccess: RswiftResources.StringResource { .init(key: "CollectionSuccess", tableName: "Localizable", source: source, developmentValue: "Collection success", comment: nil) }

      /// en translation: comment
      ///
      /// Key: Comment
      ///
      /// Locales: en, zh-Hans
      var comment: RswiftResources.StringResource { .init(key: "Comment", tableName: "Localizable", source: source, developmentValue: "comment", comment: nil) }

      /// en translation: Comment posted successfully!
      ///
      /// Key: CommentCreateSuccess
      ///
      /// Locales: en, zh-Hans
      var commentCreateSuccess: RswiftResources.StringResource { .init(key: "CommentCreateSuccess", tableName: "Localizable", source: source, developmentValue: "Comment posted successfully!", comment: nil) }

      /// en translation: Complete
      ///
      /// Key: Complete
      ///
      /// Locales: en, zh-Hans
      var complete: RswiftResources.StringResource { .init(key: "Complete", tableName: "Localizable", source: source, developmentValue: "Complete", comment: nil) }

      /// en translation: Complete registration
      ///
      /// Key: CompleteRegister
      ///
      /// Locales: en, zh-Hans
      var completeRegister: RswiftResources.StringResource { .init(key: "CompleteRegister", tableName: "Localizable", source: source, developmentValue: "Complete registration", comment: nil) }

      /// en translation: Complete data
      ///
      /// Key: CompleteUserData
      ///
      /// Locales: en, zh-Hans
      var completeUserData: RswiftResources.StringResource { .init(key: "CompleteUserData", tableName: "Localizable", source: source, developmentValue: "Complete data", comment: nil) }

      /// en translation: Complete the data, the account is better and more secure
      ///
      /// Key: CompleteUserDataTip
      ///
      /// Locales: en, zh-Hans
      var completeUserDataTip: RswiftResources.StringResource { .init(key: "CompleteUserDataTip", tableName: "Localizable", source: source, developmentValue: "Complete the data, the account is better and more secure", comment: nil) }

      /// en translation: Comprehensive
      ///
      /// Key: Comprehensive
      ///
      /// Locales: en, zh-Hans
      var comprehensive: RswiftResources.StringResource { .init(key: "Comprehensive", tableName: "Localizable", source: source, developmentValue: "Comprehensive", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: Confirm
      ///
      /// Locales: en, zh-Hans
      var confirm: RswiftResources.StringResource { .init(key: "Confirm", tableName: "Localizable", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Confirm to cancel the order?
      ///
      /// Key: ConfirmCancelOrder
      ///
      /// Locales: en, zh-Hans
      var confirmCancelOrder: RswiftResources.StringResource { .init(key: "ConfirmCancelOrder", tableName: "Localizable", source: source, developmentValue: "Confirm to cancel the order?", comment: nil) }

      /// en translation: Confirm to leave
      ///
      /// Key: ConfirmDeparture
      ///
      /// Locales: en, zh-Hans
      var confirmDeparture: RswiftResources.StringResource { .init(key: "ConfirmDeparture", tableName: "Localizable", source: source, developmentValue: "Confirm to leave", comment: nil) }

      /// en translation: Confirm to abandon payment?
      ///
      /// Key: ConfirmExitPay
      ///
      /// Locales: en, zh-Hans
      var confirmExitPay: RswiftResources.StringResource { .init(key: "ConfirmExitPay", tableName: "Localizable", source: source, developmentValue: "Confirm to abandon payment?", comment: nil) }

      /// en translation: The order will be cancelled after the time limit for payment has expired
      ///
      /// Key: ConfirmExitPayMessage
      ///
      /// Locales: en, zh-Hans
      var confirmExitPayMessage: RswiftResources.StringResource { .init(key: "ConfirmExitPayMessage", tableName: "Localizable", source: source, developmentValue: "The order will be cancelled after the time limit for payment has expired", comment: nil) }

      /// en translation: Confirm logout?
      ///
      /// Key: ConfirmLogout
      ///
      /// Locales: en, zh-Hans
      var confirmLogout: RswiftResources.StringResource { .init(key: "ConfirmLogout", tableName: "Localizable", source: source, developmentValue: "Confirm logout?", comment: nil) }

      /// en translation: Confirm order
      ///
      /// Key: ConfirmOrder
      ///
      /// Locales: en, zh-Hans
      var confirmOrder: RswiftResources.StringResource { .init(key: "ConfirmOrder", tableName: "Localizable", source: source, developmentValue: "Confirm order", comment: nil) }

      /// en translation: Confirm Payment
      ///
      /// Key: ConfirmPayPrice
      ///
      /// Locales: en, zh-Hans
      var confirmPayPrice: RswiftResources.StringResource { .init(key: "ConfirmPayPrice", tableName: "Localizable", source: source, developmentValue: "Confirm Payment", comment: nil) }

      /// en translation: Are you sure to unbind?
      ///
      /// Key: ConfirmUnbind
      ///
      /// Locales: en, zh-Hans
      var confirmUnbind: RswiftResources.StringResource { .init(key: "ConfirmUnbind", tableName: "Localizable", source: source, developmentValue: "Are you sure to unbind?", comment: nil) }

      /// en translation: Continue to pay
      ///
      /// Key: ContinuePay
      ///
      /// Locales: en, zh-Hans
      var continuePay: RswiftResources.StringResource { .init(key: "ContinuePay", tableName: "Localizable", source: source, developmentValue: "Continue to pay", comment: nil) }

      /// en translation: Copy Comment
      ///
      /// Key: CopyComment
      ///
      /// Locales: en, zh-Hans
      var copyComment: RswiftResources.StringResource { .init(key: "CopyComment", tableName: "Localizable", source: source, developmentValue: "Copy Comment", comment: nil) }

      /// en translation: Copy successfully!
      ///
      /// Key: CopySuccess
      ///
      /// Locales: en, zh-Hans
      var copySuccess: RswiftResources.StringResource { .init(key: "CopySuccess", tableName: "Localizable", source: source, developmentValue: "Copy successfully!", comment: nil) }

      /// en translation: %1$d
      ///
      /// Key: CountSecond
      ///
      /// Locales: en, zh-Hans
      var countSecond: RswiftResources.StringResource1<Int> { .init(key: "CountSecond", tableName: "Localizable", source: source, developmentValue: "%1$d", comment: nil) }

      /// en translation: Coupon
      ///
      /// Key: Coupon
      ///
      /// Locales: en, zh-Hans
      var coupon: RswiftResources.StringResource { .init(key: "Coupon", tableName: "Localizable", source: source, developmentValue: "Coupon", comment: nil) }

      /// en translation: Create playlist
      ///
      /// Key: CreateSheet
      ///
      /// Locales: en, zh-Hans
      var createSheet: RswiftResources.StringResource { .init(key: "CreateSheet", tableName: "Localizable", source: source, developmentValue: "Create playlist", comment: nil) }

      /// en translation: Created sheet
      ///
      /// Key: CreatedSheet
      ///
      /// Locales: en, zh-Hans
      var createdSheet: RswiftResources.StringResource { .init(key: "CreatedSheet", tableName: "Localizable", source: source, developmentValue: "Created sheet", comment: nil) }

      /// en translation: Current position
      ///
      /// Key: CurrentPosition
      ///
      /// Locales: en, zh-Hans
      var currentPosition: RswiftResources.StringResource { .init(key: "CurrentPosition", tableName: "Localizable", source: source, developmentValue: "Current position", comment: nil) }

      /// en translation: Current version
      ///
      /// Key: CurrentVersion
      ///
      /// Locales: en, zh-Hans
      var currentVersion: RswiftResources.StringResource { .init(key: "CurrentVersion", tableName: "Localizable", source: source, developmentValue: "Current version", comment: nil) }

      /// en translation: Custom Home
      ///
      /// Key: CustomDiscovery
      ///
      /// Locales: en, zh-Hans
      var customDiscovery: RswiftResources.StringResource { .init(key: "CustomDiscovery", tableName: "Localizable", source: source, developmentValue: "Custom Home", comment: nil) }

      /// en translation: Customer Service
      ///
      /// Key: CustomerService
      ///
      /// Locales: en, zh-Hans
      var customerService: RswiftResources.StringResource { .init(key: "CustomerService", tableName: "Localizable", source: source, developmentValue: "Customer Service", comment: nil) }

      /// en translation: Night
      ///
      /// Key: DarkMode
      ///
      /// Locales: en, zh-Hans
      var darkMode: RswiftResources.StringResource { .init(key: "DarkMode", tableName: "Localizable", source: source, developmentValue: "Night", comment: nil) }

      /// en translation: Recommend
      ///
      /// Key: DayRecommend
      ///
      /// Locales: en, zh-Hans
      var dayRecommend: RswiftResources.StringResource { .init(key: "DayRecommend", tableName: "Localizable", source: source, developmentValue: "Recommend", comment: nil) }

      /// en translation: Default address
      ///
      /// Key: DefaultAddress
      ///
      /// Locales: en, zh-Hans
      var defaultAddress: RswiftResources.StringResource { .init(key: "DefaultAddress", tableName: "Localizable", source: source, developmentValue: "Default address", comment: nil) }

      /// en translation: [Default]
      ///
      /// Key: DefaultAddressText
      ///
      /// Locales: en, zh-Hans
      var defaultAddressText: RswiftResources.StringResource { .init(key: "DefaultAddressText", tableName: "Localizable", source: source, developmentValue: "[Default]", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: Delete
      ///
      /// Locales: en, zh-Hans
      var delete: RswiftResources.StringResource { .init(key: "Delete", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Delete all
      ///
      /// Key: DeleteAll
      ///
      /// Locales: en, zh-Hans
      var deleteAll: RswiftResources.StringResource { .init(key: "DeleteAll", tableName: "Localizable", source: source, developmentValue: "Delete all", comment: nil) }

      /// en translation: Delete Comment
      ///
      /// Key: DeleteComment
      ///
      /// Locales: en, zh-Hans
      var deleteComment: RswiftResources.StringResource { .init(key: "DeleteComment", tableName: "Localizable", source: source, developmentValue: "Delete Comment", comment: nil) }

      /// en translation: Delete order
      ///
      /// Key: DeleteOrder
      ///
      /// Locales: en, zh-Hans
      var deleteOrder: RswiftResources.StringResource { .init(key: "DeleteOrder", tableName: "Localizable", source: source, developmentValue: "Delete order", comment: nil) }

      /// en translation: Details
      ///
      /// Key: Detail
      ///
      /// Locales: en, zh-Hans
      var detail: RswiftResources.StringResource { .init(key: "Detail", tableName: "Localizable", source: source, developmentValue: "Details", comment: nil) }

      /// en translation: Detailed address
      ///
      /// Key: DetailAddress
      ///
      /// Locales: en, zh-Hans
      var detailAddress: RswiftResources.StringResource { .init(key: "DetailAddress", tableName: "Localizable", source: source, developmentValue: "Detailed address", comment: nil) }

      /// en translation: Album
      ///
      /// Key: DigitalAlbum
      ///
      /// Locales: en, zh-Hans
      var digitalAlbum: RswiftResources.StringResource { .init(key: "DigitalAlbum", tableName: "Localizable", source: source, developmentValue: "Album", comment: nil) }

      /// en translation: Disagree and exit the app
      ///
      /// Key: Disagree
      ///
      /// Locales: en, zh-Hans
      var disagree: RswiftResources.StringResource { .init(key: "Disagree", tableName: "Localizable", source: source, developmentValue: "Disagree and exit the app", comment: nil) }

      /// en translation: Discovery
      ///
      /// Key: Discovery
      ///
      /// Locales: en, zh-Hans
      var discovery: RswiftResources.StringResource { .init(key: "Discovery", tableName: "Localizable", source: source, developmentValue: "Discovery", comment: nil) }

      /// en translation: Download
      ///
      /// Key: Download
      ///
      /// Locales: en, zh-Hans
      var download: RswiftResources.StringResource { .init(key: "Download", tableName: "Localizable", source: source, developmentValue: "Download", comment: nil) }

      /// en translation: Start All
      ///
      /// Key: DownloadAll
      ///
      /// Locales: en, zh-Hans
      var downloadAll: RswiftResources.StringResource { .init(key: "DownloadAll", tableName: "Localizable", source: source, developmentValue: "Start All", comment: nil) }

      /// en translation: download complete
      ///
      /// Key: DownloadComplete
      ///
      /// Locales: en, zh-Hans
      var downloadComplete: RswiftResources.StringResource { .init(key: "DownloadComplete", tableName: "Localizable", source: source, developmentValue: "download complete", comment: nil) }

      /// en translation: Download failed, click to retry
      ///
      /// Key: DownloadFailed
      ///
      /// Locales: en, zh-Hans
      var downloadFailed: RswiftResources.StringResource { .init(key: "DownloadFailed", tableName: "Localizable", source: source, developmentValue: "Download failed, click to retry", comment: nil) }

      /// en translation: Download Manager
      ///
      /// Key: DownloadManager
      ///
      /// Locales: en, zh-Hans
      var downloadManager: RswiftResources.StringResource { .init(key: "DownloadManager", tableName: "Localizable", source: source, developmentValue: "Download Manager", comment: nil) }

      /// en translation: download using mobile network
      ///
      /// Key: DownloadMobileNetwork
      ///
      /// Locales: en, zh-Hans
      var downloadMobileNetwork: RswiftResources.StringResource { .init(key: "DownloadMobileNetwork", tableName: "Localizable", source: source, developmentValue: "download using mobile network", comment: nil) }

      /// en translation: Downloading
      ///
      /// Key: Downloading
      ///
      /// Locales: en, zh-Hans
      var downloading: RswiftResources.StringResource { .init(key: "Downloading", tableName: "Localizable", source: source, developmentValue: "Downloading", comment: nil) }

      /// en translation: Mail
      ///
      /// Key: Email
      ///
      /// Locales: en, zh-Hans
      var email: RswiftResources.StringResource { .init(key: "Email", tableName: "Localizable", source: source, developmentValue: "Mail", comment: nil) }

      /// en translation: Please enter the verification code
      ///
      /// Key: EnterCode
      ///
      /// Locales: en, zh-Hans
      var enterCode: RswiftResources.StringResource { .init(key: "EnterCode", tableName: "Localizable", source: source, developmentValue: "Please enter the verification code", comment: nil) }

      /// en translation: Please enter a confirmation password
      ///
      /// Key: EnterConfirmPassword
      ///
      /// Locales: en, zh-Hans
      var enterConfirmPassword: RswiftResources.StringResource { .init(key: "EnterConfirmPassword", tableName: "Localizable", source: source, developmentValue: "Please enter a confirmation password", comment: nil) }

      /// en translation: Please enter content
      ///
      /// Key: EnterContent
      ///
      /// Locales: en, zh-Hans
      var enterContent: RswiftResources.StringResource { .init(key: "EnterContent", tableName: "Localizable", source: source, developmentValue: "Please enter content", comment: nil) }

      /// en translation: Please enter a personal introduction
      ///
      /// Key: EnterDescription
      ///
      /// Locales: en, zh-Hans
      var enterDescription: RswiftResources.StringResource { .init(key: "EnterDescription", tableName: "Localizable", source: source, developmentValue: "Please enter a personal introduction", comment: nil) }

      /// en translation: Please enter detailed address
      ///
      /// Key: EnterDetailAddress
      ///
      /// Locales: en, zh-Hans
      var enterDetailAddress: RswiftResources.StringResource { .init(key: "EnterDetailAddress", tableName: "Localizable", source: source, developmentValue: "Please enter detailed address", comment: nil) }

      /// en translation: Please enter your email
      ///
      /// Key: EnterEmail
      ///
      /// Locales: en, zh-Hans
      var enterEmail: RswiftResources.StringResource { .init(key: "EnterEmail", tableName: "Localizable", source: source, developmentValue: "Please enter your email", comment: nil) }

      /// en translation: Please enter a name
      ///
      /// Key: EnterName
      ///
      /// Locales: en, zh-Hans
      var enterName: RswiftResources.StringResource { .init(key: "EnterName", tableName: "Localizable", source: source, developmentValue: "Please enter a name", comment: nil) }

      /// en translation: Please enter a nickname (2~10 digits)
      ///
      /// Key: EnterNickname
      ///
      /// Locales: en, zh-Hans
      var enterNickname: RswiftResources.StringResource { .init(key: "EnterNickname", tableName: "Localizable", source: source, developmentValue: "Please enter a nickname (2~10 digits)", comment: nil) }

      /// en translation: Please enter a password (6~15 digits)
      ///
      /// Key: EnterPassword
      ///
      /// Locales: en, zh-Hans
      var enterPassword: RswiftResources.StringResource { .init(key: "EnterPassword", tableName: "Localizable", source: source, developmentValue: "Please enter a password (6~15 digits)", comment: nil) }

      /// en translation: Please enter the phone number
      ///
      /// Key: EnterPhone
      ///
      /// Locales: en, zh-Hans
      var enterPhone: RswiftResources.StringResource { .init(key: "EnterPhone", tableName: "Localizable", source: source, developmentValue: "Please enter the phone number", comment: nil) }

      /// en translation: Please enter a phone number or email
      ///
      /// Key: EnterPhoneOrEmail
      ///
      /// Locales: en, zh-Hans
      var enterPhoneOrEmail: RswiftResources.StringResource { .init(key: "EnterPhoneOrEmail", tableName: "Localizable", source: source, developmentValue: "Please enter a phone number or email", comment: nil) }

      /// en translation: Please select the receiving area
      ///
      /// Key: EnterReceiveArea
      ///
      /// Locales: en, zh-Hans
      var enterReceiveArea: RswiftResources.StringResource { .init(key: "EnterReceiveArea", tableName: "Localizable", source: source, developmentValue: "Please select the receiving area", comment: nil) }

      /// en translation: Please enter the receiving name
      ///
      /// Key: EnterReceiveName
      ///
      /// Locales: en, zh-Hans
      var enterReceiveName: RswiftResources.StringResource { .init(key: "EnterReceiveName", tableName: "Localizable", source: source, developmentValue: "Please enter the receiving name", comment: nil) }

      /// en translation: Please enter the receiving phone
      ///
      /// Key: EnterReceiveTelephone
      ///
      /// Locales: en, zh-Hans
      var enterReceiveTelephone: RswiftResources.StringResource { .init(key: "EnterReceiveTelephone", tableName: "Localizable", source: source, developmentValue: "Please enter the receiving phone", comment: nil) }

      /// en translation: Please enter phone number/email
      ///
      /// Key: EnterUsername
      ///
      /// Locales: en, zh-Hans
      var enterUsername: RswiftResources.StringResource { .init(key: "EnterUsername", tableName: "Localizable", source: source, developmentValue: "Please enter phone number/email", comment: nil) }

      /// en translation: The format of the verification code is incorrect
      ///
      /// Key: ErrorCodeFormat
      ///
      /// Locales: en, zh-Hans
      var errorCodeFormat: RswiftResources.StringResource { .init(key: "ErrorCodeFormat", tableName: "Localizable", source: source, developmentValue: "The format of the verification code is incorrect", comment: nil) }

      /// en translation: Incorrect password twice
      ///
      /// Key: ErrorConfirmPassword
      ///
      /// Locales: en, zh-Hans
      var errorConfirmPassword: RswiftResources.StringResource { .init(key: "ErrorConfirmPassword", tableName: "Localizable", source: source, developmentValue: "Incorrect password twice", comment: nil) }

      /// en translation: Confirm password format is incorrect
      ///
      /// Key: ErrorConfirmPasswordFormat
      ///
      /// Locales: en, zh-Hans
      var errorConfirmPasswordFormat: RswiftResources.StringResource { .init(key: "ErrorConfirmPasswordFormat", tableName: "Localizable", source: source, developmentValue: "Confirm password format is incorrect", comment: nil) }

      /// en translation: Content cannot exceed 140 characters.
      ///
      /// Key: ErrorContentLength
      ///
      /// Locales: en, zh-Hans
      var errorContentLength: RswiftResources.StringResource { .init(key: "ErrorContentLength", tableName: "Localizable", source: source, developmentValue: "Content cannot exceed 140 characters.", comment: nil) }

      /// en translation: The email format is incorrect
      ///
      /// Key: ErrorEmailFormat
      ///
      /// Locales: en, zh-Hans
      var errorEmailFormat: RswiftResources.StringResource { .init(key: "ErrorEmailFormat", tableName: "Localizable", source: source, developmentValue: "The email format is incorrect", comment: nil) }

      /// en translation: The QR code has no content
      ///
      /// Key: ErrorEmptyQrcode
      ///
      /// Locales: en, zh-Hans
      var errorEmptyQrcode: RswiftResources.StringResource { .init(key: "ErrorEmptyQrcode", tableName: "Localizable", source: source, developmentValue: "The QR code has no content", comment: nil) }

      /// en translation: Login to the chat server failed, you can register a new account and try, if you still have problems, contact customer service
      ///
      /// Key: ErrorMessageLogin
      ///
      /// Locales: en, zh-Hans
      var errorMessageLogin: RswiftResources.StringResource { .init(key: "ErrorMessageLogin", tableName: "Localizable", source: source, developmentValue: "Login to the chat server failed, you can register a new account and try, if you still have problems, contact customer service", comment: nil) }

      /// en translation: Failed to connect to the server
      ///
      /// Key: ErrorNetworkConnect
      ///
      /// Locales: en, zh-Hans
      var errorNetworkConnect: RswiftResources.StringResource { .init(key: "ErrorNetworkConnect", tableName: "Localizable", source: source, developmentValue: "Failed to connect to the server", comment: nil) }

      /// en translation: Login information expired
      ///
      /// Key: ErrorNetworkNotAuth
      ///
      /// Locales: en, zh-Hans
      var errorNetworkNotAuth: RswiftResources.StringResource { .init(key: "ErrorNetworkNotAuth", tableName: "Localizable", source: source, developmentValue: "Login information expired", comment: nil) }

      /// en translation: The content you accessed does not exist
      ///
      /// Key: ErrorNetworkNotFound
      ///
      /// Locales: en, zh-Hans
      var errorNetworkNotFound: RswiftResources.StringResource { .init(key: "ErrorNetworkNotFound", tableName: "Localizable", source: source, developmentValue: "The content you accessed does not exist", comment: nil) }

      /// en translation: You do not have permission to access
      ///
      /// Key: ErrorNetworkNotPermission
      ///
      /// Locales: en, zh-Hans
      var errorNetworkNotPermission: RswiftResources.StringResource { .init(key: "ErrorNetworkNotPermission", tableName: "Localizable", source: source, developmentValue: "You do not have permission to access", comment: nil) }

      /// en translation: Server error
      ///
      /// Key: ErrorNetworkServer
      ///
      /// Locales: en, zh-Hans
      var errorNetworkServer: RswiftResources.StringResource { .init(key: "ErrorNetworkServer", tableName: "Localizable", source: source, developmentValue: "Server error", comment: nil) }

      /// en translation: Connection server timeout
      ///
      /// Key: ErrorNetworkTimeout
      ///
      /// Locales: en, zh-Hans
      var errorNetworkTimeout: RswiftResources.StringResource { .init(key: "ErrorNetworkTimeout", tableName: "Localizable", source: source, developmentValue: "Connection server timeout", comment: nil) }

      /// en translation: Server not found
      ///
      /// Key: ErrorNetworkUnknownHost
      ///
      /// Locales: en, zh-Hans
      var errorNetworkUnknownHost: RswiftResources.StringResource { .init(key: "ErrorNetworkUnknownHost", tableName: "Localizable", source: source, developmentValue: "Server not found", comment: nil) }

      /// en translation: Nickname format is incorrect
      ///
      /// Key: ErrorNicknameFormat
      ///
      /// Locales: en, zh-Hans
      var errorNicknameFormat: RswiftResources.StringResource { .init(key: "ErrorNicknameFormat", tableName: "Localizable", source: source, developmentValue: "Nickname format is incorrect", comment: nil) }

      /// en translation: No download task
      ///
      /// Key: ErrorNotDownload
      ///
      /// Locales: en, zh-Hans
      var errorNotDownload: RswiftResources.StringResource { .init(key: "ErrorNotDownload", tableName: "Localizable", source: source, developmentValue: "No download task", comment: nil) }

      /// en translation: This format is not supported
      ///
      /// Key: ErrorNotSupportQRCodeFormat
      ///
      /// Locales: en, zh-Hans
      var errorNotSupportQRCodeFormat: RswiftResources.StringResource { .init(key: "ErrorNotSupportQRCodeFormat", tableName: "Localizable", source: source, developmentValue: "This format is not supported", comment: nil) }

      /// en translation: Local parameter error
      ///
      /// Key: ErrorParameter
      ///
      /// Locales: en, zh-Hans
      var errorParameter: RswiftResources.StringResource { .init(key: "ErrorParameter", tableName: "Localizable", source: source, developmentValue: "Local parameter error", comment: nil) }

      /// en translation: The password format is incorrect
      ///
      /// Key: ErrorPasswordFormat
      ///
      /// Locales: en, zh-Hans
      var errorPasswordFormat: RswiftResources.StringResource { .init(key: "ErrorPasswordFormat", tableName: "Localizable", source: source, developmentValue: "The password format is incorrect", comment: nil) }

      /// en translation: Payment Cancelled
      ///
      /// Key: ErrorPayCancel
      ///
      /// Locales: en, zh-Hans
      var errorPayCancel: RswiftResources.StringResource { .init(key: "ErrorPayCancel", tableName: "Localizable", source: source, developmentValue: "Payment Cancelled", comment: nil) }

      /// en translation: Payment channel error
      ///
      /// Key: ErrorPayChannel
      ///
      /// Locales: en, zh-Hans
      var errorPayChannel: RswiftResources.StringResource { .init(key: "ErrorPayChannel", tableName: "Localizable", source: source, developmentValue: "Payment channel error", comment: nil) }

      /// en translation: Payment failed
      ///
      /// Key: ErrorPayFailed
      ///
      /// Locales: en, zh-Hans
      var errorPayFailed: RswiftResources.StringResource { .init(key: "ErrorPayFailed", tableName: "Localizable", source: source, developmentValue: "Payment failed", comment: nil) }

      /// en translation: The phone number format is incorrect
      ///
      /// Key: ErrorPhoneFormat
      ///
      /// Locales: en, zh-Hans
      var errorPhoneFormat: RswiftResources.StringResource { .init(key: "ErrorPhoneFormat", tableName: "Localizable", source: source, developmentValue: "The phone number format is incorrect", comment: nil) }

      /// en translation: API decryption error
      ///
      /// Key: ErrorResponsedecrypt
      ///
      /// Locales: en, zh-Hans
      var errorResponsedecrypt: RswiftResources.StringResource { .init(key: "ErrorResponsedecrypt", tableName: "Localizable", source: source, developmentValue: "API decryption error", comment: nil) }

      /// en translation: API signature error
      ///
      /// Key: ErrorResponsesign
      ///
      /// Locales: en, zh-Hans
      var errorResponsesign: RswiftResources.StringResource { .init(key: "ErrorResponsesign", tableName: "Localizable", source: source, developmentValue: "API signature error", comment: nil) }

      /// en translation: Send failed
      ///
      /// Key: ErrorSendMessage
      ///
      /// Locales: en, zh-Hans
      var errorSendMessage: RswiftResources.StringResource { .init(key: "ErrorSendMessage", tableName: "Localizable", source: source, developmentValue: "Send failed", comment: nil) }

      /// en translation: Unknown error
      ///
      /// Key: ErrorUnknown
      ///
      /// Locales: en, zh-Hans
      var errorUnknown: RswiftResources.StringResource { .init(key: "ErrorUnknown", tableName: "Localizable", source: source, developmentValue: "Unknown error", comment: nil) }

      /// en translation: Unknown error: %@
      ///
      /// Key: ErrorUnknownFormat
      ///
      /// Locales: en, zh-Hans
      var errorUnknownFormat: RswiftResources.StringResource1<String> { .init(key: "ErrorUnknownFormat", tableName: "Localizable", source: source, developmentValue: "Unknown error: %@", comment: nil) }

      /// en translation: Upload image error
      ///
      /// Key: ErrorUploadImage
      ///
      /// Locales: en, zh-Hans
      var errorUploadImage: RswiftResources.StringResource { .init(key: "ErrorUploadImage", tableName: "Localizable", source: source, developmentValue: "Upload image error", comment: nil) }

      /// en translation: Upload file error
      ///
      /// Key: ErrorUploadfile
      ///
      /// Locales: en, zh-Hans
      var errorUploadfile: RswiftResources.StringResource { .init(key: "ErrorUploadfile", tableName: "Localizable", source: source, developmentValue: "Upload file error", comment: nil) }

      /// en translation: Username format is incorrect
      ///
      /// Key: ErrorUsernameFormat
      ///
      /// Locales: en, zh-Hans
      var errorUsernameFormat: RswiftResources.StringResource { .init(key: "ErrorUsernameFormat", tableName: "Localizable", source: source, developmentValue: "Username format is incorrect", comment: nil) }

      /// en translation: Evaluate
      ///
      /// Key: Evaluate
      ///
      /// Locales: en, zh-Hans
      var evaluate: RswiftResources.StringResource { .init(key: "Evaluate", tableName: "Localizable", source: source, developmentValue: "Evaluate", comment: nil) }

      /// en translation: Experience Now
      ///
      /// Key: ExperienceNow
      ///
      /// Locales: en, zh-Hans
      var experienceNow: RswiftResources.StringResource { .init(key: "ExperienceNow", tableName: "Localizable", source: source, developmentValue: "Experience Now", comment: nil) }

      /// en translation: Save failed
      ///
      /// Key: FailedSave
      ///
      /// Locales: en, zh-Hans
      var failedSave: RswiftResources.StringResource { .init(key: "FailedSave", tableName: "Localizable", source: source, developmentValue: "Save failed", comment: nil) }

      /// en translation: Feed
      ///
      /// Key: Feed
      ///
      /// Locales: en, zh-Hans
      var feed: RswiftResources.StringResource { .init(key: "Feed", tableName: "Localizable", source: source, developmentValue: "Feed", comment: nil) }

      /// en translation: Follow users
      ///
      /// Key: Follow
      ///
      /// Locales: en, zh-Hans
      var follow: RswiftResources.StringResource { .init(key: "Follow", tableName: "Localizable", source: source, developmentValue: "Follow users", comment: nil) }

      /// en translation: Forgot Password
      ///
      /// Key: ForgotPassword
      ///
      /// Locales: en, zh-Hans
      var forgotPassword: RswiftResources.StringResource { .init(key: "ForgotPassword", tableName: "Localizable", source: source, developmentValue: "Forgot Password", comment: nil) }

      /// en translation: Free Freight
      ///
      /// Key: FreeFreight
      ///
      /// Locales: en, zh-Hans
      var freeFreight: RswiftResources.StringResource { .init(key: "FreeFreight", tableName: "Localizable", source: source, developmentValue: "Free Freight", comment: nil) }

      /// en translation: Shipping
      ///
      /// Key: Freight
      ///
      /// Locales: en, zh-Hans
      var freight: RswiftResources.StringResource { .init(key: "Freight", tableName: "Localizable", source: source, developmentValue: "Shipping", comment: nil) }

      /// en translation: Function introduction
      ///
      /// Key: FunctionIntroduction
      ///
      /// Locales: en, zh-Hans
      var functionIntroduction: RswiftResources.StringResource { .init(key: "FunctionIntroduction", tableName: "Localizable", source: source, developmentValue: "Function introduction", comment: nil) }

      /// en translation: Gender
      ///
      /// Key: Gender
      ///
      /// Locales: en, zh-Hans
      var gender: RswiftResources.StringResource { .init(key: "Gender", tableName: "Localizable", source: source, developmentValue: "Gender", comment: nil) }

      /// en translation: Get it now
      ///
      /// Key: GetNow
      ///
      /// Locales: en, zh-Hans
      var getNow: RswiftResources.StringResource { .init(key: "GetNow", tableName: "Localizable", source: source, developmentValue: "Get it now", comment: nil) }

      /// en translation: Buy Now
      ///
      /// Key: GoBuy
      ///
      /// Locales: en, zh-Hans
      var goBuy: RswiftResources.StringResource { .init(key: "GoBuy", tableName: "Localizable", source: source, developmentValue: "Buy Now", comment: nil) }

      /// en translation: Go to pay
      ///
      /// Key: GoPay
      ///
      /// Locales: en, zh-Hans
      var goPay: RswiftResources.StringResource { .init(key: "GoPay", tableName: "Localizable", source: source, developmentValue: "Go to pay", comment: nil) }

      /// en translation: Study Now
      ///
      /// Key: GoStudy
      ///
      /// Locales: en, zh-Hans
      var goStudy: RswiftResources.StringResource { .init(key: "GoStudy", tableName: "Localizable", source: source, developmentValue: "Study Now", comment: nil) }

      /// en translation: Please enter a comment.
      ///
      /// Key: HintComment
      ///
      /// Locales: en, zh-Hans
      var hintComment: RswiftResources.StringResource { .init(key: "HintComment", tableName: "Localizable", source: source, developmentValue: "Please enter a comment.", comment: nil) }

      /// en translation: Location:
      ///
      /// Key: HintCurrentPosition
      ///
      /// Locales: en, zh-Hans
      var hintCurrentPosition: RswiftResources.StringResource { .init(key: "HintCurrentPosition", tableName: "Localizable", source: source, developmentValue: "Location:", comment: nil) }

      /// en translation: Please introduce yourself to everyone
      ///
      /// Key: HintDescription
      ///
      /// Locales: en, zh-Hans
      var hintDescription: RswiftResources.StringResource { .init(key: "HintDescription", tableName: "Localizable", source: source, developmentValue: "Please introduce yourself to everyone", comment: nil) }

      /// en translation: Please enter the message you want to send
      ///
      /// Key: HintEnterMessage
      ///
      /// Locales: en, zh-Hans
      var hintEnterMessage: RswiftResources.StringResource { .init(key: "HintEnterMessage", tableName: "Localizable", source: source, developmentValue: "Please enter the message you want to send", comment: nil) }

      /// en translation: Please enter the sheet name
      ///
      /// Key: HintEnterSheetName
      ///
      /// Locales: en, zh-Hans
      var hintEnterSheetName: RswiftResources.StringResource { .init(key: "HintEnterSheetName", tableName: "Localizable", source: source, developmentValue: "Please enter the sheet name", comment: nil) }

      /// en translation: Please enter what you want to say.
      ///
      /// Key: HintFeed
      ///
      /// Locales: en, zh-Hans
      var hintFeed: RswiftResources.StringResource { .init(key: "HintFeed", tableName: "Localizable", source: source, developmentValue: "Please enter what you want to say.", comment: nil) }

      /// en translation: Your account is logged in on another device and you have been forced to log out
      ///
      /// Key: HintForceLogout
      ///
      /// Locales: en, zh-Hans
      var hintForceLogout: RswiftResources.StringResource { .init(key: "HintForceLogout", tableName: "Localizable", source: source, developmentValue: "Your account is logged in on another device and you have been forced to log out", comment: nil) }

      /// en translation: Payment confirmation
      ///
      /// Key: HintPayWait
      ///
      /// Locales: en, zh-Hans
      var hintPayWait: RswiftResources.StringResource { .init(key: "HintPayWait", tableName: "Localizable", source: source, developmentValue: "Payment confirmation", comment: nil) }

      /// en translation: Scan the QR code add me friend
      ///
      /// Key: HintScanMyCode
      ///
      /// Locales: en, zh-Hans
      var hintScanMyCode: RswiftResources.StringResource { .init(key: "HintScanMyCode", tableName: "Localizable", source: source, developmentValue: "Scan the QR code add me friend", comment: nil) }

      /// en translation: Search
      ///
      /// Key: HintSearchValue
      ///
      /// Locales: en, zh-Hans
      var hintSearchValue: RswiftResources.StringResource { .init(key: "HintSearchValue", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Hot comment
      ///
      /// Key: HotComment
      ///
      /// Locales: en, zh-Hans
      var hotComment: RswiftResources.StringResource { .init(key: "HotComment", tableName: "Localizable", source: source, developmentValue: "Hot comment", comment: nil) }

      /// en translation: Flower stage
      ///
      /// Key: HuabeiStages
      ///
      /// Locales: en, zh-Hans
      var huabeiStages: RswiftResources.StringResource { .init(key: "HuabeiStages", tableName: "Localizable", source: source, developmentValue: "Flower stage", comment: nil) }

      /// en translation: Id Asc
      ///
      /// Key: IdAsc
      ///
      /// Locales: en, zh-Hans
      var idAsc: RswiftResources.StringResource { .init(key: "IdAsc", tableName: "Localizable", source: source, developmentValue: "Id Asc", comment: nil) }

      /// en translation: JS Test
      ///
      /// Key: JSTest
      ///
      /// Locales: en, zh-Hans
      var jsTest: RswiftResources.StringResource { .init(key: "JSTest", tableName: "Localizable", source: source, developmentValue: "JS Test", comment: nil) }

      /// en translation: %d people participated
      ///
      /// Key: JoinCount
      ///
      /// Locales: en, zh-Hans
      var joinCount: RswiftResources.StringResource1<Int> { .init(key: "JoinCount", tableName: "Localizable", source: source, developmentValue: "%d people participated", comment: nil) }

      /// en translation: Live
      ///
      /// Key: Live
      ///
      /// Locales: en, zh-Hans
      var live: RswiftResources.StringResource { .init(key: "Live", tableName: "Localizable", source: source, developmentValue: "Live", comment: nil) }

      /// en translation: Upload the %d picture.
      ///
      /// Key: LoadingUpload
      ///
      /// Locales: en, zh-Hans
      var loadingUpload: RswiftResources.StringResource1<Int> { .init(key: "LoadingUpload", tableName: "Localizable", source: source, developmentValue: "Upload the %d picture.", comment: nil) }

      /// en translation: Local Music
      ///
      /// Key: LocalMusic
      ///
      /// Locales: en, zh-Hans
      var localMusic: RswiftResources.StringResource { .init(key: "LocalMusic", tableName: "Localizable", source: source, developmentValue: "Local Music", comment: nil) }

      /// en translation: Login
      ///
      /// Key: Login
      ///
      /// Locales: en, zh-Hans
      var login: RswiftResources.StringResource { .init(key: "Login", tableName: "Localizable", source: source, developmentValue: "Login", comment: nil) }

      /// en translation: Login failed: %@
      ///
      /// Key: LoginError
      ///
      /// Locales: en, zh-Hans
      var loginError: RswiftResources.StringResource1<String> { .init(key: "LoginError", tableName: "Localizable", source: source, developmentValue: "Login failed: %@", comment: nil) }

      /// en translation: Login now
      ///
      /// Key: LoginNow
      ///
      /// Locales: en, zh-Hans
      var loginNow: RswiftResources.StringResource { .init(key: "LoginNow", tableName: "Localizable", source: source, developmentValue: "Login now", comment: nil) }

      /// en translation: Login/Register
      ///
      /// Key: LoginOrRegister
      ///
      /// Locales: en, zh-Hans
      var loginOrRegister: RswiftResources.StringResource { .init(key: "LoginOrRegister", tableName: "Localizable", source: source, developmentValue: "Login/Register", comment: nil) }

      /// en translation: Logout
      ///
      /// Key: Logout
      ///
      /// Locales: en, zh-Hans
      var logout: RswiftResources.StringResource { .init(key: "Logout", tableName: "Localizable", source: source, developmentValue: "Logout", comment: nil) }

      /// en translation: Official Mall
      ///
      /// Key: Mall
      ///
      /// Locales: en, zh-Hans
      var mall: RswiftResources.StringResource { .init(key: "Mall", tableName: "Localizable", source: source, developmentValue: "Official Mall", comment: nil) }

      /// en translation: Amap Map
      ///
      /// Key: MapAMap
      ///
      /// Locales: en, zh-Hans
      var mapAMap: RswiftResources.StringResource { .init(key: "MapAMap", tableName: "Localizable", source: source, developmentValue: "Amap Map", comment: nil) }

      /// en translation: Baidu Map
      ///
      /// Key: MapBaidu
      ///
      /// Locales: en, zh-Hans
      var mapBaidu: RswiftResources.StringResource { .init(key: "MapBaidu", tableName: "Localizable", source: source, developmentValue: "Baidu Map", comment: nil) }

      /// en translation: Sogou Map
      ///
      /// Key: MapSogou
      ///
      /// Locales: en, zh-Hans
      var mapSogou: RswiftResources.StringResource { .init(key: "MapSogou", tableName: "Localizable", source: source, developmentValue: "Sogou Map", comment: nil) }

      /// en translation: System Map
      ///
      /// Key: MapSystem
      ///
      /// Locales: en, zh-Hans
      var mapSystem: RswiftResources.StringResource { .init(key: "MapSystem", tableName: "Localizable", source: source, developmentValue: "System Map", comment: nil) }

      /// en translation: Tencent Map
      ///
      /// Key: MapTencent
      ///
      /// Locales: en, zh-Hans
      var mapTencent: RswiftResources.StringResource { .init(key: "MapTencent", tableName: "Localizable", source: source, developmentValue: "Tencent Map", comment: nil) }

      /// en translation: My
      ///
      /// Key: Me
      ///
      /// Locales: en, zh-Hans
      var me: RswiftResources.StringResource { .init(key: "Me", tableName: "Localizable", source: source, developmentValue: "My", comment: nil) }

      /// en translation: Member Center
      ///
      /// Key: MemberCenter
      ///
      /// Locales: en, zh-Hans
      var memberCenter: RswiftResources.StringResource { .init(key: "MemberCenter", tableName: "Localizable", source: source, developmentValue: "Member Center", comment: nil) }

      /// en translation: More
      ///
      /// Key: More
      ///
      /// Locales: en, zh-Hans
      var more: RswiftResources.StringResource { .init(key: "More", tableName: "Localizable", source: source, developmentValue: "More", comment: nil) }

      /// en translation: Multiple selection
      ///
      /// Key: MultiSelect
      ///
      /// Locales: en, zh-Hans
      var multiSelect: RswiftResources.StringResource { .init(key: "MultiSelect", tableName: "Localizable", source: source, developmentValue: "Multiple selection", comment: nil) }

      /// en translation: Alarm Clock
      ///
      /// Key: MusicAlarmClock
      ///
      /// Locales: en, zh-Hans
      var musicAlarmClock: RswiftResources.StringResource { .init(key: "MusicAlarmClock", tableName: "Localizable", source: source, developmentValue: "Alarm Clock", comment: nil) }

      /// en translation: (Total %1$d songs)
      ///
      /// Key: MusicCount
      ///
      /// Locales: en, zh-Hans
      var musicCount: RswiftResources.StringResource1<Int> { .init(key: "MusicCount", tableName: "Localizable", source: source, developmentValue: "(Total %1$d songs)", comment: nil) }

      /// en translation: My QR code
      ///
      /// Key: MyCode
      ///
      /// Locales: en, zh-Hans
      var myCode: RswiftResources.StringResource { .init(key: "MyCode", tableName: "Localizable", source: source, developmentValue: "My QR code", comment: nil) }

      /// en translation: My Collection
      ///
      /// Key: MyCollect
      ///
      /// Locales: en, zh-Hans
      var myCollect: RswiftResources.StringResource { .init(key: "MyCollect", tableName: "Localizable", source: source, developmentValue: "My Collection", comment: nil) }

      /// en translation: My Coupon
      ///
      /// Key: MyCoupon
      ///
      /// Locales: en, zh-Hans
      var myCoupon: RswiftResources.StringResource { .init(key: "MyCoupon", tableName: "Localizable", source: source, developmentValue: "My Coupon", comment: nil) }

      /// en translation: Customer Service
      ///
      /// Key: MyCustomerService
      ///
      /// Locales: en, zh-Hans
      var myCustomerService: RswiftResources.StringResource { .init(key: "MyCustomerService", tableName: "Localizable", source: source, developmentValue: "Customer Service", comment: nil) }

      /// en translation: My fans
      ///
      /// Key: MyFans
      ///
      /// Locales: en, zh-Hans
      var myFans: RswiftResources.StringResource { .init(key: "MyFans", tableName: "Localizable", source: source, developmentValue: "My fans", comment: nil) }

      /// en translation: My friend
      ///
      /// Key: MyFriend
      ///
      /// Locales: en, zh-Hans
      var myFriend: RswiftResources.StringResource { .init(key: "MyFriend", tableName: "Localizable", source: source, developmentValue: "My friend", comment: nil) }

      /// en translation: My message
      ///
      /// Key: MyMessage
      ///
      /// Locales: en, zh-Hans
      var myMessage: RswiftResources.StringResource { .init(key: "MyMessage", tableName: "Localizable", source: source, developmentValue: "My message", comment: nil) }

      /// en translation: My order
      ///
      /// Key: MyOrder
      ///
      /// Locales: en, zh-Hans
      var myOrder: RswiftResources.StringResource { .init(key: "MyOrder", tableName: "Localizable", source: source, developmentValue: "My order", comment: nil) }

      /// en translation: My Profile
      ///
      /// Key: MyProfile
      ///
      /// Locales: en, zh-Hans
      var myProfile: RswiftResources.StringResource { .init(key: "MyProfile", tableName: "Localizable", source: source, developmentValue: "My Profile", comment: nil) }

      /// en translation: My Radio
      ///
      /// Key: MyRadio
      ///
      /// Locales: en, zh-Hans
      var myRadio: RswiftResources.StringResource { .init(key: "MyRadio", tableName: "Localizable", source: source, developmentValue: "My Radio", comment: nil) }

      /// en translation: Your Network seems to be suck
      ///
      /// Key: NetworkError
      ///
      /// Locales: en, zh-Hans
      var networkError: RswiftResources.StringResource { .init(key: "NetworkError", tableName: "Localizable", source: source, developmentValue: "Your Network seems to be suck", comment: nil) }

      /// en translation: Nickname
      ///
      /// Key: Nickname
      ///
      /// Locales: en, zh-Hans
      var nickname: RswiftResources.StringResource { .init(key: "Nickname", tableName: "Localizable", source: source, developmentValue: "Nickname", comment: nil) }

      /// en translation: No Availability
      ///
      /// Key: NoAvailable
      ///
      /// Locales: en, zh-Hans
      var noAvailable: RswiftResources.StringResource { .init(key: "NoAvailable", tableName: "Localizable", source: source, developmentValue: "No Availability", comment: nil) }

      /// en translation: No Coupon
      ///
      /// Key: NoCoupon
      ///
      /// Locales: en, zh-Hans
      var noCoupon: RswiftResources.StringResource { .init(key: "NoCoupon", tableName: "Localizable", source: source, developmentValue: "No Coupon", comment: nil) }

      /// en translation: No data
      ///
      /// Key: NoData
      ///
      /// Locales: en, zh-Hans
      var noData: RswiftResources.StringResource { .init(key: "NoData", tableName: "Localizable", source: source, developmentValue: "No data", comment: nil) }

      /// en translation: No local music
      ///
      /// Key: NoLocalMusic
      ///
      /// Locales: en, zh-Hans
      var noLocalMusic: RswiftResources.StringResource { .init(key: "NoLocalMusic", tableName: "Localizable", source: source, developmentValue: "No local music", comment: nil) }

      /// en translation: No content
      ///
      /// Key: NoResult
      ///
      /// Locales: en, zh-Hans
      var noResult: RswiftResources.StringResource { .init(key: "NoResult", tableName: "Localizable", source: source, developmentValue: "No content", comment: nil) }

      /// en translation: Please install the corresponding map software first
      ///
      /// Key: NotInstallMap
      ///
      /// Locales: en, zh-Hans
      var notInstallMap: RswiftResources.StringResource { .init(key: "NotInstallMap", tableName: "Localizable", source: source, developmentValue: "Please install the corresponding map software first", comment: nil) }

      /// en translation: Not open
      ///
      /// Key: NotOpen
      ///
      /// Locales: en, zh-Hans
      var notOpen: RswiftResources.StringResource { .init(key: "NotOpen", tableName: "Localizable", source: source, developmentValue: "Not open", comment: nil) }

      /// en translation: Do not show position
      ///
      /// Key: NotShowPosition
      ///
      /// Locales: en, zh-Hans
      var notShowPosition: RswiftResources.StringResource { .init(key: "NotShowPosition", tableName: "Localizable", source: source, developmentValue: "Do not show position", comment: nil) }

      /// en translation: Baidu OCR error: %@, error code: %d
      ///
      /// Key: OcrError
      ///
      /// Locales: en, zh-Hans
      var ocrError: RswiftResources.StringResource2<String, Int> { .init(key: "OcrError", tableName: "Localizable", source: source, developmentValue: "Baidu OCR error: %@, error code: %d", comment: nil) }

      /// en translation: Closed
      ///
      /// Key: OrderClose
      ///
      /// Locales: en, zh-Hans
      var orderClose: RswiftResources.StringResource { .init(key: "OrderClose", tableName: "Localizable", source: source, developmentValue: "Closed", comment: nil) }

      /// en translation: Order Details
      ///
      /// Key: OrderDetail
      ///
      /// Locales: en, zh-Hans
      var orderDetail: RswiftResources.StringResource { .init(key: "OrderDetail", tableName: "Localizable", source: source, developmentValue: "Order Details", comment: nil) }

      /// en translation: Order number
      ///
      /// Key: OrderNo
      ///
      /// Locales: en, zh-Hans
      var orderNo: RswiftResources.StringResource { .init(key: "OrderNo", tableName: "Localizable", source: source, developmentValue: "Order number", comment: nil) }

      /// en translation: Order Source
      ///
      /// Key: OrderSource
      ///
      /// Locales: en, zh-Hans
      var orderSource: RswiftResources.StringResource { .init(key: "OrderSource", tableName: "Localizable", source: source, developmentValue: "Order Source", comment: nil) }

      /// en translation: Order time
      ///
      /// Key: OrderTime
      ///
      /// Locales: en, zh-Hans
      var orderTime: RswiftResources.StringResource { .init(key: "OrderTime", tableName: "Localizable", source: source, developmentValue: "Order time", comment: nil) }

      /// en translation: Other
      ///
      /// Key: Other
      ///
      /// Locales: en, zh-Hans
      var other: RswiftResources.StringResource { .init(key: "Other", tableName: "Localizable", source: source, developmentValue: "Other", comment: nil) }

      /// en translation: Other login methods
      ///
      /// Key: OtherLogin
      ///
      /// Locales: en, zh-Hans
      var otherLogin: RswiftResources.StringResource { .init(key: "OtherLogin", tableName: "Localizable", source: source, developmentValue: "Other login methods", comment: nil) }

      /// en translation: Pause
      ///
      /// Key: Pause
      ///
      /// Locales: en, zh-Hans
      var pause: RswiftResources.StringResource { .init(key: "Pause", tableName: "Localizable", source: source, developmentValue: "Pause", comment: nil) }

      /// en translation: Pause all
      ///
      /// Key: PauseAll
      ///
      /// Locales: en, zh-Hans
      var pauseAll: RswiftResources.StringResource { .init(key: "PauseAll", tableName: "Localizable", source: source, developmentValue: "Pause all", comment: nil) }

      /// en translation: Payment Channel
      ///
      /// Key: PayChannel
      ///
      /// Locales: en, zh-Hans
      var payChannel: RswiftResources.StringResource { .init(key: "PayChannel", tableName: "Localizable", source: source, developmentValue: "Payment Channel", comment: nil) }

      /// en translation: Pay Order
      ///
      /// Key: PayOrder
      ///
      /// Locales: en, zh-Hans
      var payOrder: RswiftResources.StringResource { .init(key: "PayOrder", tableName: "Localizable", source: source, developmentValue: "Pay Order", comment: nil) }

      /// en translation: Payment platform
      ///
      /// Key: PayPlatform
      ///
      /// Locales: en, zh-Hans
      var payPlatform: RswiftResources.StringResource { .init(key: "PayPlatform", tableName: "Localizable", source: source, developmentValue: "Payment platform", comment: nil) }

      /// en translation: Payment remaining time %@
      ///
      /// Key: PayRemainingTime
      ///
      /// Locales: en, zh-Hans
      var payRemainingTime: RswiftResources.StringResource1<String> { .init(key: "PayRemainingTime", tableName: "Localizable", source: source, developmentValue: "Payment remaining time %@", comment: nil) }

      /// en translation: Please complete payment before %@
      ///
      /// Key: PaymentBefore
      ///
      /// Locales: en, zh-Hans
      var paymentBefore: RswiftResources.StringResource1<String> { .init(key: "PaymentBefore", tableName: "Localizable", source: source, developmentValue: "Please complete payment before %@", comment: nil) }

      /// en translation: Personal Dress
      ///
      /// Key: PersonDress
      ///
      /// Locales: en, zh-Hans
      var personDress: RswiftResources.StringResource { .init(key: "PersonDress", tableName: "Localizable", source: source, developmentValue: "Personal Dress", comment: nil) }

      /// en translation: FM
      ///
      /// Key: PersonFm
      ///
      /// Locales: en, zh-Hans
      var personFm: RswiftResources.StringResource { .init(key: "PersonFm", tableName: "Localizable", source: source, developmentValue: "FM", comment: nil) }

      /// en translation: Phone number
      ///
      /// Key: Phone
      ///
      /// Locales: en, zh-Hans
      var phone: RswiftResources.StringResource { .init(key: "Phone", tableName: "Localizable", source: source, developmentValue: "Phone number", comment: nil) }

      /// en translation: Mobile phone number login
      ///
      /// Key: PhoneLogin
      ///
      /// Locales: en, zh-Hans
      var phoneLogin: RswiftResources.StringResource { .init(key: "PhoneLogin", tableName: "Localizable", source: source, developmentValue: "Mobile phone number login", comment: nil) }

      /// en translation: Play All
      ///
      /// Key: PlayAll
      ///
      /// Locales: en, zh-Hans
      var playAll: RswiftResources.StringResource { .init(key: "PlayAll", tableName: "Localizable", source: source, developmentValue: "Play All", comment: nil) }

      /// en translation: Recently Played
      ///
      /// Key: PlayHistory
      ///
      /// Locales: en, zh-Hans
      var playHistory: RswiftResources.StringResource { .init(key: "PlayHistory", tableName: "Localizable", source: source, developmentValue: "Recently Played", comment: nil) }

      /// en translation: ￥%.2f
      ///
      /// Key: Price
      ///
      /// Locales: en, zh-Hans
      var price: RswiftResources.StringResource1<Double> { .init(key: "Price", tableName: "Localizable", source: source, developmentValue: "￥%.2f", comment: nil) }

      /// en translation: Price Asc
      ///
      /// Key: PriceAsc
      ///
      /// Locales: en, zh-Hans
      var priceAsc: RswiftResources.StringResource { .init(key: "PriceAsc", tableName: "Localizable", source: source, developmentValue: "Price Asc", comment: nil) }

      /// en translation: Price Desc
      ///
      /// Key: PriceDesc
      ///
      /// Locales: en, zh-Hans
      var priceDesc: RswiftResources.StringResource { .init(key: "PriceDesc", tableName: "Localizable", source: source, developmentValue: "Price Desc", comment: nil) }

      /// en translation: ￥%d
      ///
      /// Key: PriceInt
      ///
      /// Locales: en, zh-Hans
      var priceInt: RswiftResources.StringResource1<Int> { .init(key: "PriceInt", tableName: "Localizable", source: source, developmentValue: "￥%d", comment: nil) }

      /// en translation: Commodity
      ///
      /// Key: Product
      ///
      /// Locales: en, zh-Hans
      var product: RswiftResources.StringResource { .init(key: "Product", tableName: "Localizable", source: source, developmentValue: "Commodity", comment: nil) }

      /// en translation: x%d
      ///
      /// Key: ProductCount
      ///
      /// Locales: en, zh-Hans
      var productCount: RswiftResources.StringResource1<Int> { .init(key: "ProductCount", tableName: "Localizable", source: source, developmentValue: "x%d", comment: nil) }

      /// en translation: Total price of product
      ///
      /// Key: ProductTotalPrice
      ///
      /// Locales: en, zh-Hans
      var productTotalPrice: RswiftResources.StringResource { .init(key: "ProductTotalPrice", tableName: "Localizable", source: source, developmentValue: "Total price of product", comment: nil) }

      /// en translation: Publish
      ///
      /// Key: Publish
      ///
      /// Locales: en, zh-Hans
      var publish: RswiftResources.StringResource { .init(key: "Publish", tableName: "Localizable", source: source, developmentValue: "Publish", comment: nil) }

      /// en translation: Publish Feed
      ///
      /// Key: PublishFeed
      ///
      /// Locales: en, zh-Hans
      var publishFeed: RswiftResources.StringResource { .init(key: "PublishFeed", tableName: "Localizable", source: source, developmentValue: "Publish Feed", comment: nil) }

      /// en translation: QQ
      ///
      /// Key: Qq
      ///
      /// Locales: en, zh-Hans
      var qq: RswiftResources.StringResource { .init(key: "Qq", tableName: "Localizable", source: source, developmentValue: "QQ", comment: nil) }

      /// en translation: Rank
      ///
      /// Key: Rank
      ///
      /// Locales: en, zh-Hans
      var rank: RswiftResources.StringResource { .init(key: "Rank", tableName: "Localizable", source: source, developmentValue: "Rank", comment: nil) }

      /// en translation: Receipt Area
      ///
      /// Key: ReceiveArea
      ///
      /// Locales: en, zh-Hans
      var receiveArea: RswiftResources.StringResource { .init(key: "ReceiveArea", tableName: "Localizable", source: source, developmentValue: "Receipt Area", comment: nil) }

      /// en translation: Receiver Name
      ///
      /// Key: ReceiveName
      ///
      /// Locales: en, zh-Hans
      var receiveName: RswiftResources.StringResource { .init(key: "ReceiveName", tableName: "Localizable", source: source, developmentValue: "Receiver Name", comment: nil) }

      /// en translation: Receive phone
      ///
      /// Key: ReceiveTelephone
      ///
      /// Locales: en, zh-Hans
      var receiveTelephone: RswiftResources.StringResource { .init(key: "ReceiveTelephone", tableName: "Localizable", source: source, developmentValue: "Receive phone", comment: nil) }

      /// en translation: Received
      ///
      /// Key: Received
      ///
      /// Locales: en, zh-Hans
      var received: RswiftResources.StringResource { .init(key: "Received", tableName: "Localizable", source: source, developmentValue: "Received", comment: nil) }

      /// en translation: Receiving Address
      ///
      /// Key: ReceivingAddress
      ///
      /// Locales: en, zh-Hans
      var receivingAddress: RswiftResources.StringResource { .init(key: "ReceivingAddress", tableName: "Localizable", source: source, developmentValue: "Receiving Address", comment: nil) }

      /// en translation: Receiving Address Details
      ///
      /// Key: ReceivingAddressDetail
      ///
      /// Locales: en, zh-Hans
      var receivingAddressDetail: RswiftResources.StringResource { .init(key: "ReceivingAddressDetail", tableName: "Localizable", source: source, developmentValue: "Receiving Address Details", comment: nil) }

      /// en translation: Recognition
      ///
      /// Key: Recognition
      ///
      /// Locales: en, zh-Hans
      var recognition: RswiftResources.StringResource { .init(key: "Recognition", tableName: "Localizable", source: source, developmentValue: "Recognition", comment: nil) }

      /// en translation: Paste text, name, phone number and address can be automatically recognized For example: 801, Unit 1, Building 9, Yuanda Central Park, Muhua Road, Tianfu New District, Chengdu, Sichuan, Li Wei 13141111222
      ///
      /// Key: RecognitionAddressTip
      ///
      /// Locales: en, zh-Hans
      var recognitionAddressTip: RswiftResources.StringResource { .init(key: "RecognitionAddressTip", tableName: "Localizable", source: source, developmentValue: "Paste text, name, phone number and address can be automatically recognized\nFor example: 801, Unit 1, Building 9, Yuanda Central Park, Muhua Road, Tianfu New District, Chengdu, Sichuan, Li Wei 13141111222", comment: nil) }

      /// en translation: Recommend
      ///
      /// Key: Recommend
      ///
      /// Locales: en, zh-Hans
      var recommend: RswiftResources.StringResource { .init(key: "Recommend", tableName: "Localizable", source: source, developmentValue: "Recommend", comment: nil) }

      /// en translation: Recommend sheet
      ///
      /// Key: RecommendSheet
      ///
      /// Locales: en, zh-Hans
      var recommendSheet: RswiftResources.StringResource { .init(key: "RecommendSheet", tableName: "Localizable", source: source, developmentValue: "Recommend sheet", comment: nil) }

      /// en translation: Recommend song
      ///
      /// Key: RecommendSong
      ///
      /// Locales: en, zh-Hans
      var recommendSong: RswiftResources.StringResource { .init(key: "RecommendSong", tableName: "Localizable", source: source, developmentValue: "Recommend song", comment: nil) }

      /// en translation: Supplementary Information
      ///
      /// Key: Register2
      ///
      /// Locales: en, zh-Hans
      var register2: RswiftResources.StringResource { .init(key: "Register2", tableName: "Localizable", source: source, developmentValue: "Supplementary Information", comment: nil) }

      /// en translation: Register and login
      ///
      /// Key: RegisterAndLogin
      ///
      /// Locales: en, zh-Hans
      var registerAndLogin: RswiftResources.StringResource { .init(key: "RegisterAndLogin", tableName: "Localizable", source: source, developmentValue: "Register and login", comment: nil) }

      /// en translation: Register now
      ///
      /// Key: RegisterNow
      ///
      /// Locales: en, zh-Hans
      var registerNow: RswiftResources.StringResource { .init(key: "RegisterNow", tableName: "Localizable", source: source, developmentValue: "Register now", comment: nil) }

      /// en translation: Related Recommendations
      ///
      /// Key: RelatedRecomment
      ///
      /// Locales: en, zh-Hans
      var relatedRecomment: RswiftResources.StringResource { .init(key: "RelatedRecomment", tableName: "Localizable", source: source, developmentValue: "Related Recommendations", comment: nil) }

      /// en translation: Reply
      ///
      /// Key: Reply
      ///
      /// Locales: en, zh-Hans
      var reply: RswiftResources.StringResource { .init(key: "Reply", tableName: "Localizable", source: source, developmentValue: "Reply", comment: nil) }

      /// en translation: Reply to Comment
      ///
      /// Key: ReplyComment
      ///
      /// Locales: en, zh-Hans
      var replyComment: RswiftResources.StringResource { .init(key: "ReplyComment", tableName: "Localizable", source: source, developmentValue: "Reply to Comment", comment: nil) }

      /// en translation: Reply %@: 
      ///
      /// Key: ReplyHint
      ///
      /// Locales: en, zh-Hans
      var replyHint: RswiftResources.StringResource1<String> { .init(key: "ReplyHint", tableName: "Localizable", source: source, developmentValue: "Reply %@: ", comment: nil) }

      /// en translation: Report
      ///
      /// Key: Report
      ///
      /// Locales: en, zh-Hans
      var report: RswiftResources.StringResource { .init(key: "Report", tableName: "Localizable", source: source, developmentValue: "Report", comment: nil) }

      /// en translation: Report Comment
      ///
      /// Key: ReportComment
      ///
      /// Locales: en, zh-Hans
      var reportComment: RswiftResources.StringResource { .init(key: "ReportComment", tableName: "Localizable", source: source, developmentValue: "Report Comment", comment: nil) }

      /// en translation: Resend
      ///
      /// Key: Resend
      ///
      /// Locales: en, zh-Hans
      var resend: RswiftResources.StringResource { .init(key: "Resend", tableName: "Localizable", source: source, developmentValue: "Resend", comment: nil) }

      /// en translation: %1$d to resend
      ///
      /// Key: ResendCount
      ///
      /// Locales: en, zh-Hans
      var resendCount: RswiftResources.StringResource1<Int> { .init(key: "ResendCount", tableName: "Localizable", source: source, developmentValue: "%1$d to resend", comment: nil) }

      /// en translation: Reset
      ///
      /// Key: Reset
      ///
      /// Locales: en, zh-Hans
      var reset: RswiftResources.StringResource { .init(key: "Reset", tableName: "Localizable", source: source, developmentValue: "Reset", comment: nil) }

      /// en translation: Retry
      ///
      /// Key: Retry
      ///
      /// Locales: en, zh-Hans
      var retry: RswiftResources.StringResource { .init(key: "Retry", tableName: "Localizable", source: source, developmentValue: "Retry", comment: nil) }

      /// en translation: Play
      ///
      /// Key: Rlay
      ///
      /// Locales: en, zh-Hans
      var rlay: RswiftResources.StringResource { .init(key: "Rlay", tableName: "Localizable", source: source, developmentValue: "Play", comment: nil) }

      /// en translation: Scan result
      ///
      /// Key: SanResult
      ///
      /// Locales: en, zh-Hans
      var sanResult: RswiftResources.StringResource { .init(key: "SanResult", tableName: "Localizable", source: source, developmentValue: "Scan result", comment: nil) }

      /// en translation: Sati space
      ///
      /// Key: Sati
      ///
      /// Locales: en, zh-Hans
      var sati: RswiftResources.StringResource { .init(key: "Sati", tableName: "Localizable", source: source, developmentValue: "Sati space", comment: nil) }

      /// en translation: Save Album
      ///
      /// Key: SaveAlbum
      ///
      /// Locales: en, zh-Hans
      var saveAlbum: RswiftResources.StringResource { .init(key: "SaveAlbum", tableName: "Localizable", source: source, developmentValue: "Save Album", comment: nil) }

      /// en translation: Sweep
      ///
      /// Key: Scan
      ///
      /// Locales: en, zh-Hans
      var scan: RswiftResources.StringResource { .init(key: "Scan", tableName: "Localizable", source: source, developmentValue: "Sweep", comment: nil) }

      /// en translation: Search
      ///
      /// Key: Search
      ///
      /// Locales: en, zh-Hans
      var search: RswiftResources.StringResource { .init(key: "Search", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Search for places
      ///
      /// Key: SearchPoi
      ///
      /// Locales: en, zh-Hans
      var searchPoi: RswiftResources.StringResource { .init(key: "SearchPoi", tableName: "Localizable", source: source, developmentValue: "Search for places", comment: nil) }

      /// en translation: Security Verification
      ///
      /// Key: SecurityVerification
      ///
      /// Locales: en, zh-Hans
      var securityVerification: RswiftResources.StringResource { .init(key: "SecurityVerification", tableName: "Localizable", source: source, developmentValue: "Security Verification", comment: nil) }

      /// en translation: Please select the shipping address
      ///
      /// Key: SelectAddress
      ///
      /// Locales: en, zh-Hans
      var selectAddress: RswiftResources.StringResource { .init(key: "SelectAddress", tableName: "Localizable", source: source, developmentValue: "Please select the shipping address", comment: nil) }

      /// en translation: Select all
      ///
      /// Key: SelectAll
      ///
      /// Locales: en, zh-Hans
      var selectAll: RswiftResources.StringResource { .init(key: "SelectAll", tableName: "Localizable", source: source, developmentValue: "Select all", comment: nil) }

      /// en translation: Please select a gender
      ///
      /// Key: SelectGender
      ///
      /// Locales: en, zh-Hans
      var selectGender: RswiftResources.StringResource { .init(key: "SelectGender", tableName: "Localizable", source: source, developmentValue: "Please select a gender", comment: nil) }

      /// en translation: %dm | %@
      ///
      /// Key: SelectLocationAddress
      ///
      /// Locales: en, zh-Hans
      var selectLocationAddress: RswiftResources.StringResource2<Int, String> { .init(key: "SelectLocationAddress", tableName: "Localizable", source: source, developmentValue: "%dm | %@", comment: nil) }

      /// en translation: Please select a navigation application
      ///
      /// Key: SelectLocationNavigation
      ///
      /// Locales: en, zh-Hans
      var selectLocationNavigation: RswiftResources.StringResource { .init(key: "SelectLocationNavigation", tableName: "Localizable", source: source, developmentValue: "Please select a navigation application", comment: nil) }

      /// en translation: Select Lyrics
      ///
      /// Key: SelectLyric
      ///
      /// Locales: en, zh-Hans
      var selectLyric: RswiftResources.StringResource { .init(key: "SelectLyric", tableName: "Localizable", source: source, developmentValue: "Select Lyrics", comment: nil) }

      /// en translation: Send
      ///
      /// Key: Send
      ///
      /// Locales: en, zh-Hans
      var send: RswiftResources.StringResource { .init(key: "Send", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: Send verification code
      ///
      /// Key: SendCode
      ///
      /// Locales: en, zh-Hans
      var sendCode: RswiftResources.StringResource { .init(key: "SendCode", tableName: "Localizable", source: source, developmentValue: "Send verification code", comment: nil) }

      /// en translation: Send message
      ///
      /// Key: SendMessage
      ///
      /// Locales: en, zh-Hans
      var sendMessage: RswiftResources.StringResource { .init(key: "SendMessage", tableName: "Localizable", source: source, developmentValue: "Send message", comment: nil) }

      /// en translation: Reset Password
      ///
      /// Key: SetPassword
      ///
      /// Locales: en, zh-Hans
      var setPassword: RswiftResources.StringResource { .init(key: "SetPassword", tableName: "Localizable", source: source, developmentValue: "Reset Password", comment: nil) }

      /// en translation: Setting
      ///
      /// Key: Setting
      ///
      /// Locales: en, zh-Hans
      var setting: RswiftResources.StringResource { .init(key: "Setting", tableName: "Localizable", source: source, developmentValue: "Setting", comment: nil) }

      /// en translation: Settle
      ///
      /// Key: SettleAccount
      ///
      /// Locales: en, zh-Hans
      var settleAccount: RswiftResources.StringResource { .init(key: "SettleAccount", tableName: "Localizable", source: source, developmentValue: "Settle", comment: nil) }

      /// en translation: Settle(%d)
      ///
      /// Key: SettleAccountCount
      ///
      /// Locales: en, zh-Hans
      var settleAccountCount: RswiftResources.StringResource1<Int> { .init(key: "SettleAccountCount", tableName: "Localizable", source: source, developmentValue: "Settle(%d)", comment: nil) }

      /// en translation: Share
      ///
      /// Key: Share
      ///
      /// Locales: en, zh-Hans
      var share: RswiftResources.StringResource { .init(key: "Share", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: Share App
      ///
      /// Key: ShareApp
      ///
      /// Locales: en, zh-Hans
      var shareApp: RswiftResources.StringResource { .init(key: "ShareApp", tableName: "Localizable", source: source, developmentValue: "Share App", comment: nil) }

      /// en translation: Share Cancel
      ///
      /// Key: ShareCancel
      ///
      /// Locales: en, zh-Hans
      var shareCancel: RswiftResources.StringResource { .init(key: "ShareCancel", tableName: "Localizable", source: source, developmentValue: "Share Cancel", comment: nil) }

      /// en translation: Share Comment
      ///
      /// Key: ShareComment
      ///
      /// Locales: en, zh-Hans
      var shareComment: RswiftResources.StringResource { .init(key: "ShareComment", tableName: "Localizable", source: source, developmentValue: "Share Comment", comment: nil) }

      /// en translation: Share failed
      ///
      /// Key: ShareFailed
      ///
      /// Locales: en, zh-Hans
      var shareFailed: RswiftResources.StringResource { .init(key: "ShareFailed", tableName: "Localizable", source: source, developmentValue: "Share failed", comment: nil) }

      /// en translation: Share Image
      ///
      /// Key: ShareImageLyric
      ///
      /// Locales: en, zh-Hans
      var shareImageLyric: RswiftResources.StringResource { .init(key: "ShareImageLyric", tableName: "Localizable", source: source, developmentValue: "Share Image", comment: nil) }

      /// en translation: From my cloud music Lyrics sharing
      ///
      /// Key: ShareLyricInfo
      ///
      /// Locales: en, zh-Hans
      var shareLyricInfo: RswiftResources.StringResource { .init(key: "ShareLyricInfo", tableName: "Localizable", source: source, developmentValue: "From my cloud music Lyrics sharing", comment: nil) }

      /// en translation: Share Success
      ///
      /// Key: ShareSuccess
      ///
      /// Locales: en, zh-Hans
      var shareSuccess: RswiftResources.StringResource { .init(key: "ShareSuccess", tableName: "Localizable", source: source, developmentValue: "Share Success", comment: nil) }

      /// en translation: Share Text
      ///
      /// Key: ShareTextLyric
      ///
      /// Locales: en, zh-Hans
      var shareTextLyric: RswiftResources.StringResource { .init(key: "ShareTextLyric", tableName: "Localizable", source: source, developmentValue: "Share Text", comment: nil) }

      /// en translation: Playlist
      ///
      /// Key: Sheet
      ///
      /// Locales: en, zh-Hans
      var sheet: RswiftResources.StringResource { .init(key: "Sheet", tableName: "Localizable", source: source, developmentValue: "Playlist", comment: nil) }

      /// en translation: Shopping Cart
      ///
      /// Key: ShopCart
      ///
      /// Locales: en, zh-Hans
      var shopCart: RswiftResources.StringResource { .init(key: "ShopCart", tableName: "Localizable", source: source, developmentValue: "Shopping Cart", comment: nil) }

      /// en translation: Product Details
      ///
      /// Key: ShopDetail
      ///
      /// Locales: en, zh-Hans
      var shopDetail: RswiftResources.StringResource { .init(key: "ShopDetail", tableName: "Localizable", source: source, developmentValue: "Product Details", comment: nil) }

      /// en translation: Short video
      ///
      /// Key: ShortVideo
      ///
      /// Locales: en, zh-Hans
      var shortVideo: RswiftResources.StringResource { .init(key: "ShortVideo", tableName: "Localizable", source: source, developmentValue: "Short video", comment: nil) }

      /// en translation: Skip Ad %d
      ///
      /// Key: SkipAdCount
      ///
      /// Locales: en, zh-Hans
      var skipAdCount: RswiftResources.StringResource1<Int> { .init(key: "SkipAdCount", tableName: "Localizable", source: source, developmentValue: "Skip Ad %d", comment: nil) }

      /// en translation: %d
      ///
      /// Key: SongCount
      ///
      /// Locales: en, zh-Hans
      var songCount: RswiftResources.StringResource1<Int> { .init(key: "SongCount", tableName: "Localizable", source: source, developmentValue: "%d", comment: nil) }

      /// en translation: Sort
      ///
      /// Key: Sort
      ///
      /// Locales: en, zh-Hans
      var sort: RswiftResources.StringResource { .init(key: "Sort", tableName: "Localizable", source: source, developmentValue: "Sort", comment: nil) }

      /// en translation: Stop Voice Input
      ///
      /// Key: StopVoiceInput
      ///
      /// Locales: en, zh-Hans
      var stopVoiceInput: RswiftResources.StringResource { .init(key: "StopVoiceInput", tableName: "Localizable", source: source, developmentValue: "Stop Voice Input", comment: nil) }

      /// en translation: Binding success
      ///
      /// Key: SuccessBind
      ///
      /// Locales: en, zh-Hans
      var successBind: RswiftResources.StringResource { .init(key: "SuccessBind", tableName: "Localizable", source: source, developmentValue: "Binding success", comment: nil) }

      /// en translation: Already purchased!
      ///
      /// Key: SuccessBuy
      ///
      /// Locales: en, zh-Hans
      var successBuy: RswiftResources.StringResource { .init(key: "SuccessBuy", tableName: "Localizable", source: source, developmentValue: "Already purchased!", comment: nil) }

      /// en translation: Delete successful
      ///
      /// Key: SuccessDelete
      ///
      /// Locales: en, zh-Hans
      var successDelete: RswiftResources.StringResource { .init(key: "SuccessDelete", tableName: "Localizable", source: source, developmentValue: "Delete successful", comment: nil) }

      /// en translation: Save successfully
      ///
      /// Key: SuccessSave
      ///
      /// Locales: en, zh-Hans
      var successSave: RswiftResources.StringResource { .init(key: "SuccessSave", tableName: "Localizable", source: source, developmentValue: "Save successfully", comment: nil) }

      /// en translation: Unbind successfully!
      ///
      /// Key: SuccessUnbind
      ///
      /// Locales: en, zh-Hans
      var successUnbind: RswiftResources.StringResource { .init(key: "SuccessUnbind", tableName: "Localizable", source: source, developmentValue: "Unbind successfully!", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: SuperCancel
      ///
      /// Locales: en, zh-Hans
      var superCancel: RswiftResources.StringResource { .init(key: "SuperCancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Edit
      ///
      /// Key: SuperEdit
      ///
      /// Locales: en, zh-Hans
      var superEdit: RswiftResources.StringResource { .init(key: "SuperEdit", tableName: "Localizable", source: source, developmentValue: "Edit", comment: nil) }

      /// en translation: Loading.
      ///
      /// Key: SuperLoading
      ///
      /// Locales: en, zh-Hans
      var superLoading: RswiftResources.StringResource { .init(key: "SuperLoading", tableName: "Localizable", source: source, developmentValue: "Loading.", comment: nil) }

      /// en translation: Save
      ///
      /// Key: SuperSave
      ///
      /// Locales: en, zh-Hans
      var superSave: RswiftResources.StringResource { .init(key: "SuperSave", tableName: "Localizable", source: source, developmentValue: "Save", comment: nil) }

      /// en translation: Terms of Service and Privacy Notice
      ///
      /// Key: TermServicePrivacy
      ///
      /// Locales: en, zh-Hans
      var termServicePrivacy: RswiftResources.StringResource { .init(key: "TermServicePrivacy", tableName: "Localizable", source: source, developmentValue: "Terms of Service and Privacy Notice", comment: nil) }

      /// en translation: Third Party Account
      ///
      /// Key: ThirdAccount
      ///
      /// Locales: en, zh-Hans
      var thirdAccount: RswiftResources.StringResource { .init(key: "ThirdAccount", tableName: "Localizable", source: source, developmentValue: "Third Party Account", comment: nil) }

      /// en translation: Timed Off
      ///
      /// Key: TimedOff
      ///
      /// Locales: en, zh-Hans
      var timedOff: RswiftResources.StringResource { .init(key: "TimedOff", tableName: "Localizable", source: source, developmentValue: "Timed Off", comment: nil) }

      /// en translation: Total:
      ///
      /// Key: Total
      ///
      /// Locales: en, zh-Hans
      var total: RswiftResources.StringResource { .init(key: "Total", tableName: "Localizable", source: source, developmentValue: "Total:", comment: nil) }

      /// en translation: Total %d pieces, total: 
      ///
      /// Key: TotalCount
      ///
      /// Locales: en, zh-Hans
      var totalCount: RswiftResources.StringResource1<Int> { .init(key: "TotalCount", tableName: "Localizable", source: source, developmentValue: "Total %d pieces, total: ", comment: nil) }

      /// en translation: Unbind
      ///
      /// Key: Unbind
      ///
      /// Locales: en, zh-Hans
      var unbind: RswiftResources.StringResource { .init(key: "Unbind", tableName: "Localizable", source: source, developmentValue: "Unbind", comment: nil) }

      /// en translation: Unplug the headset to stop music playback
      ///
      /// Key: UnplugHeadsetStopMusic
      ///
      /// Locales: en, zh-Hans
      var unplugHeadsetStopMusic: RswiftResources.StringResource { .init(key: "UnplugHeadsetStopMusic", tableName: "Localizable", source: source, developmentValue: "Unplug the headset to stop music playback", comment: nil) }

      /// en translation: Complete data successfully
      ///
      /// Key: UpdateSuccess
      ///
      /// Locales: en, zh-Hans
      var updateSuccess: RswiftResources.StringResource { .init(key: "UpdateSuccess", tableName: "Localizable", source: source, developmentValue: "Complete data successfully", comment: nil) }

      /// en translation: Upload failed, please try again later
      ///
      /// Key: UploadFailed
      ///
      /// Locales: en, zh-Hans
      var uploadFailed: RswiftResources.StringResource { .init(key: "UploadFailed", tableName: "Localizable", source: source, developmentValue: "Upload failed, please try again later", comment: nil) }

      /// en translation: By logging in, you agree to the User Agreement and Privacy Policy
      ///
      /// Key: UserAgreement
      ///
      /// Locales: en, zh-Hans
      var userAgreement: RswiftResources.StringResource { .init(key: "UserAgreement", tableName: "Localizable", source: source, developmentValue: "By logging in, you agree to the User Agreement and Privacy Policy", comment: nil) }

      /// en translation: User Details
      ///
      /// Key: UserDetail
      ///
      /// Locales: en, zh-Hans
      var userDetail: RswiftResources.StringResource { .init(key: "UserDetail", tableName: "Localizable", source: source, developmentValue: "User Details", comment: nil) }

      /// en translation: Follow %d | Follower %d
      ///
      /// Key: UserFriendInfo
      ///
      /// Locales: en, zh-Hans
      var userFriendInfo: RswiftResources.StringResource2<Int, Int> { .init(key: "UserFriendInfo", tableName: "Localizable", source: source, developmentValue: "Follow %d | Follower %d", comment: nil) }

      /// en translation: User Agreement
      ///
      /// Key: UserService
      ///
      /// Locales: en, zh-Hans
      var userService: RswiftResources.StringResource { .init(key: "UserService", tableName: "Localizable", source: source, developmentValue: "User Agreement", comment: nil) }

      /// en translation: Login with username and password
      ///
      /// Key: UsernameLogin
      ///
      /// Locales: en, zh-Hans
      var usernameLogin: RswiftResources.StringResource { .init(key: "UsernameLogin", tableName: "Localizable", source: source, developmentValue: "Login with username and password", comment: nil) }

      /// en translation: %@valid
      ///
      /// Key: ValidUntil
      ///
      /// Locales: en, zh-Hans
      var validUntil: RswiftResources.StringResource1<String> { .init(key: "ValidUntil", tableName: "Localizable", source: source, developmentValue: "%@valid", comment: nil) }

      /// en translation: Please enter verification code
      ///
      /// Key: VerificationCode
      ///
      /// Locales: en, zh-Hans
      var verificationCode: RswiftResources.StringResource { .init(key: "VerificationCode", tableName: "Localizable", source: source, developmentValue: "Please enter verification code", comment: nil) }

      /// en translation: Verification code sent to %@
      ///
      /// Key: VerificationCodeSentTo
      ///
      /// Locales: en, zh-Hans
      var verificationCodeSentTo: RswiftResources.StringResource1<String> { .init(key: "VerificationCodeSentTo", tableName: "Localizable", source: source, developmentValue: "Verification code sent to %@", comment: nil) }

      /// en translation: Video
      ///
      /// Key: Video
      ///
      /// Locales: en, zh-Hans
      var video: RswiftResources.StringResource { .init(key: "Video", tableName: "Localizable", source: source, developmentValue: "Video", comment: nil) }

      /// en translation: Play: %d
      ///
      /// Key: VideoClicksCount
      ///
      /// Locales: en, zh-Hans
      var videoClicksCount: RswiftResources.StringResource1<Int> { .init(key: "VideoClicksCount", tableName: "Localizable", source: source, developmentValue: "Play: %d", comment: nil) }

      /// en translation: Published: %@
      ///
      /// Key: VideoCreatedAt
      ///
      /// Locales: en, zh-Hans
      var videoCreatedAt: RswiftResources.StringResource1<String> { .init(key: "VideoCreatedAt", tableName: "Localizable", source: source, developmentValue: "Published: %@", comment: nil) }

      /// en translation: %d plays, by %@
      ///
      /// Key: VideoInfo
      ///
      /// Locales: en, zh-Hans
      var videoInfo: RswiftResources.StringResource2<Int, String> { .init(key: "VideoInfo", tableName: "Localizable", source: source, developmentValue: "%d plays, by %@", comment: nil) }

      /// en translation: Add VIP to highlight different languages
      ///
      /// Key: VipHint
      ///
      /// Locales: en, zh-Hans
      var vipHint: RswiftResources.StringResource { .init(key: "VipHint", tableName: "Localizable", source: source, developmentValue: "Add VIP to highlight different languages", comment: nil) }

      /// en translation: Exclusive special offer, the first month of vinyl is only 0.01 yuan!
      ///
      /// Key: VipHintPrice
      ///
      /// Locales: en, zh-Hans
      var vipHintPrice: RswiftResources.StringResource { .init(key: "VipHintPrice", tableName: "Localizable", source: source, developmentValue: "Exclusive special offer, the first month of vinyl is only 0.01 yuan!", comment: nil) }

      /// en translation: Baidu voice recognition error: %1$s
      ///
      /// Key: VoiceError
      ///
      /// Locales: en, zh-Hans
      var voiceError: RswiftResources.StringResource1<UnsafePointer<CChar>> { .init(key: "VoiceError", tableName: "Localizable", source: source, developmentValue: "Baidu voice recognition error: %1$s", comment: nil) }

      /// en translation: No recognition result, please speak louder and avoid noisy environments, etc.
      ///
      /// Key: VoiceErrorNoResult
      ///
      /// Locales: en, zh-Hans
      var voiceErrorNoResult: RswiftResources.StringResource { .init(key: "VoiceErrorNoResult", tableName: "Localizable", source: source, developmentValue: "No recognition result, please speak louder and avoid noisy environments, etc.", comment: nil) }

      /// en translation: Voice Input
      ///
      /// Key: VoiceInput
      ///
      /// Locales: en, zh-Hans
      var voiceInput: RswiftResources.StringResource { .init(key: "VoiceInput", tableName: "Localizable", source: source, developmentValue: "Voice Input", comment: nil) }

      /// en translation: To be evaluated
      ///
      /// Key: WaitComment
      ///
      /// Locales: en, zh-Hans
      var waitComment: RswiftResources.StringResource { .init(key: "WaitComment", tableName: "Localizable", source: source, developmentValue: "To be evaluated", comment: nil) }

      /// en translation: Waiting to download
      ///
      /// Key: WaitDownload
      ///
      /// Locales: en, zh-Hans
      var waitDownload: RswiftResources.StringResource { .init(key: "WaitDownload", tableName: "Localizable", source: source, developmentValue: "Waiting to download", comment: nil) }

      /// en translation: Pending payment
      ///
      /// Key: WaitPay
      ///
      /// Locales: en, zh-Hans
      var waitPay: RswiftResources.StringResource { .init(key: "WaitPay", tableName: "Localizable", source: source, developmentValue: "Pending payment", comment: nil) }

      /// en translation: Waiting to receive
      ///
      /// Key: WaitReceived
      ///
      /// Locales: en, zh-Hans
      var waitReceived: RswiftResources.StringResource { .init(key: "WaitReceived", tableName: "Localizable", source: source, developmentValue: "Waiting to receive", comment: nil) }

      /// en translation: Waiting to Ship
      ///
      /// Key: WaitShipped
      ///
      /// Locales: en, zh-Hans
      var waitShipped: RswiftResources.StringResource { .init(key: "WaitShipped", tableName: "Localizable", source: source, developmentValue: "Waiting to Ship", comment: nil) }

      /// en translation: WeChat
      ///
      /// Key: Wechat
      ///
      /// Locales: en, zh-Hans
      var wechat: RswiftResources.StringResource { .init(key: "Wechat", tableName: "Localizable", source: source, developmentValue: "WeChat", comment: nil) }

      /// en translation: Weibo
      ///
      /// Key: Weibo
      ///
      /// Locales: en, zh-Hans
      var weibo: RswiftResources.StringResource { .init(key: "Weibo", tableName: "Localizable", source: source, developmentValue: "Weibo", comment: nil) }

      /// en translation: All
      ///
      /// Key: Whole
      ///
      /// Locales: en, zh-Hans
      var whole: RswiftResources.StringResource { .init(key: "Whole", tableName: "Localizable", source: source, developmentValue: "All", comment: nil) }

      /// en translation: WiFi Preload
      ///
      /// Key: WifiPreload
      ///
      /// Locales: en, zh-Hans
      var wifiPreload: RswiftResources.StringResource { .init(key: "WifiPreload", tableName: "Localizable", source: source, developmentValue: "WiFi Preload", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 3 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `ColorBackground`.
    var colorBackground: RswiftResources.ColorResource { .init(name: "ColorBackground", path: [], bundle: bundle) }

    /// Color `TestColor`.
    var testColor: RswiftResources.ColorResource { .init(name: "TestColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 90 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `Add`.
    var add: RswiftResources.ImageResource { .init(name: "Add", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AddFill`.
    var addFill: RswiftResources.ImageResource { .init(name: "AddFill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Alert`.
    var alert: RswiftResources.ImageResource { .init(name: "Alert", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ArrowCircleDown`.
    var arrowCircleDown: RswiftResources.ImageResource { .init(name: "ArrowCircleDown", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ArrowLeft`.
    var arrowLeft: RswiftResources.ImageResource { .init(name: "ArrowLeft", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ButtonLive`.
    var buttonLive: RswiftResources.ImageResource { .init(name: "ButtonLive", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Check`.
    var check: RswiftResources.ImageResource { .init(name: "Check", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Checked`.
    var checked: RswiftResources.ImageResource { .init(name: "Checked", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Close`.
    var close: RswiftResources.ImageResource { .init(name: "Close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CodeImage`.
    var codeImage: RswiftResources.ImageResource { .init(name: "CodeImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CommentCount`.
    var commentCount: RswiftResources.ImageResource { .init(name: "CommentCount", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CommentCountSmall`.
    var commentCountSmall: RswiftResources.ImageResource { .init(name: "CommentCountSmall", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DayRecommend`.
    var dayRecommend: RswiftResources.ImageResource { .init(name: "DayRecommend", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DefaultAvatar`.
    var defaultAvatar: RswiftResources.ImageResource { .init(name: "DefaultAvatar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DefaultCover`.
    var defaultCover: RswiftResources.ImageResource { .init(name: "DefaultCover", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DigitalAlbum`.
    var digitalAlbum: RswiftResources.ImageResource { .init(name: "DigitalAlbum", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Discovery`.
    var discovery: RswiftResources.ImageResource { .init(name: "Discovery", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DiscoverySelected`.
    var discoverySelected: RswiftResources.ImageResource { .init(name: "DiscoverySelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Download`.
    var download: RswiftResources.ImageResource { .init(name: "Download", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Downloaded`.
    var downloaded: RswiftResources.ImageResource { .init(name: "Downloaded", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `EllipsisVertical`.
    var ellipsisVertical: RswiftResources.ImageResource { .init(name: "EllipsisVertical", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Eq`.
    var eq: RswiftResources.ImageResource { .init(name: "Eq", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Feed`.
    var feed: RswiftResources.ImageResource { .init(name: "Feed", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FeedSelected`.
    var feedSelected: RswiftResources.ImageResource { .init(name: "FeedSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FlashlightOff`.
    var flashlightOff: RswiftResources.ImageResource { .init(name: "FlashlightOff", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FlashlightOn`.
    var flashlightOn: RswiftResources.ImageResource { .init(name: "FlashlightOn", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HeartSolid`.
    var heartSolid: RswiftResources.ImageResource { .init(name: "HeartSolid", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `InputPassword`.
    var inputPassword: RswiftResources.ImageResource { .init(name: "InputPassword", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `InputUsername`.
    var inputUsername: RswiftResources.ImageResource { .init(name: "InputUsername", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Like`.
    var like: RswiftResources.ImageResource { .init(name: "Like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `List`.
    var list: RswiftResources.ImageResource { .init(name: "List", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Live`.
    var live: RswiftResources.ImageResource { .init(name: "Live", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LiveSelected`.
    var liveSelected: RswiftResources.ImageResource { .init(name: "LiveSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Location`.
    var location: RswiftResources.ImageResource { .init(name: "Location", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LocationPoint`.
    var locationPoint: RswiftResources.ImageResource { .init(name: "LocationPoint", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginNetease`.
    var loginNetease: RswiftResources.ImageResource { .init(name: "LoginNetease", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginNeteaseSelected`.
    var loginNeteaseSelected: RswiftResources.ImageResource { .init(name: "LoginNeteaseSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginQq`.
    var loginQq: RswiftResources.ImageResource { .init(name: "LoginQq", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginQqSelected`.
    var loginQqSelected: RswiftResources.ImageResource { .init(name: "LoginQqSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginWechat`.
    var loginWechat: RswiftResources.ImageResource { .init(name: "LoginWechat", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginWechatSelected`.
    var loginWechatSelected: RswiftResources.ImageResource { .init(name: "LoginWechatSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginWeibo`.
    var loginWeibo: RswiftResources.ImageResource { .init(name: "LoginWeibo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LoginWeiboSelected`.
    var loginWeiboSelected: RswiftResources.ImageResource { .init(name: "LoginWeiboSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Logo`.
    var logo: RswiftResources.ImageResource { .init(name: "Logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Me`.
    var me: RswiftResources.ImageResource { .init(name: "Me", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MeSelected`.
    var meSelected: RswiftResources.ImageResource { .init(name: "MeSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Menu`.
    var menu: RswiftResources.ImageResource { .init(name: "Menu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Mic`.
    var mic: RswiftResources.ImageResource { .init(name: "Mic", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MoreVerticalDot`.
    var moreVerticalDot: RswiftResources.ImageResource { .init(name: "MoreVerticalDot", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Navigation`.
    var navigation: RswiftResources.ImageResource { .init(name: "Navigation", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Next`.
    var next: RswiftResources.ImageResource { .init(name: "Next", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Pause`.
    var pause: RswiftResources.ImageResource { .init(name: "Pause", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PayAliapy`.
    var payAliapy: RswiftResources.ImageResource { .init(name: "PayAliapy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PayHuabeiStage`.
    var payHuabeiStage: RswiftResources.ImageResource { .init(name: "PayHuabeiStage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PayWechat`.
    var payWechat: RswiftResources.ImageResource { .init(name: "PayWechat", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PersonFm`.
    var personFm: RswiftResources.ImageResource { .init(name: "PersonFm", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Placeholder`.
    var placeholder: RswiftResources.ImageResource { .init(name: "Placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PlaceholderError`.
    var placeholderError: RswiftResources.ImageResource { .init(name: "PlaceholderError", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Play`.
    var play: RswiftResources.ImageResource { .init(name: "Play", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PlayCircle`.
    var playCircle: RswiftResources.ImageResource { .init(name: "PlayCircle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PlayCircleBlack`.
    var playCircleBlack: RswiftResources.ImageResource { .init(name: "PlayCircleBlack", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Previous`.
    var previous: RswiftResources.ImageResource { .init(name: "Previous", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `QRCode`.
    var qrCode: RswiftResources.ImageResource { .init(name: "QRCode", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rank`.
    var rank: RswiftResources.ImageResource { .init(name: "Rank", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RecordBackground`.
    var recordBackground: RswiftResources.ImageResource { .init(name: "RecordBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RecordThumb`.
    var recordThumb: RswiftResources.ImageResource { .init(name: "RecordThumb", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Refresh`.
    var refresh: RswiftResources.ImageResource { .init(name: "Refresh", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RepeatList`.
    var repeatList: RswiftResources.ImageResource { .init(name: "RepeatList", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RepeatOne`.
    var repeatOne: RswiftResources.ImageResource { .init(name: "RepeatOne", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RepeatRandom`.
    var repeatRandom: RswiftResources.ImageResource { .init(name: "RepeatRandom", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Scan`.
    var scan: RswiftResources.ImageResource { .init(name: "Scan", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Search`.
    var search: RswiftResources.ImageResource { .init(name: "Search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Send`.
    var send: RswiftResources.ImageResource { .init(name: "Send", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Sheet`.
    var sheet: RswiftResources.ImageResource { .init(name: "Sheet", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Shop`.
    var shop: RswiftResources.ImageResource { .init(name: "Shop", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ShopCart`.
    var shopCart: RswiftResources.ImageResource { .init(name: "ShopCart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SplashBanner`.
    var splashBanner: RswiftResources.ImageResource { .init(name: "SplashBanner", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SplashLogo`.
    var splashLogo: RswiftResources.ImageResource { .init(name: "SplashLogo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SuperChevronRight`.
    var superChevronRight: RswiftResources.ImageResource { .init(name: "SuperChevronRight", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TestBack`.
    var testBack: RswiftResources.ImageResource { .init(name: "TestBack", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Thumb`.
    var thumb: RswiftResources.ImageResource { .init(name: "Thumb", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ThumbSelected`.
    var thumbSelected: RswiftResources.ImageResource { .init(name: "ThumbSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Video`.
    var video: RswiftResources.ImageResource { .init(name: "Video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VideoSelected`.
    var videoSelected: RswiftResources.ImageResource { .init(name: "VideoSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VideoTime`.
    var videoTime: RswiftResources.ImageResource { .init(name: "VideoTime", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `guide1`.
    var guide1: RswiftResources.ImageResource { .init(name: "guide1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `guide2`.
    var guide2: RswiftResources.ImageResource { .init(name: "guide2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `guide3`.
    var guide3: RswiftResources.ImageResource { .init(name: "guide3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `guide4`.
    var guide4: RswiftResources.ImageResource { .init(name: "guide4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `guide5`.
    var guide5: RswiftResources.ImageResource { .init(name: "guide5", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 1 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `YJBannerView.bundle`.
    var yjBannerViewBundle: RswiftResources.FileResource { .init(name: "YJBannerView", pathExtension: "bundle", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}